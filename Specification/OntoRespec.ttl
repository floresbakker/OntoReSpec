@prefix dct: <http://purl.org/dc/terms/>.
@prefix dom: <https://data.rijksfinancien.nl/dom/model/def/>.
@prefix doc: <http://www.example.org/document/> .
@prefix function: <https://data.rijksfinancien.nl/html/model/function/>.
@prefix html: <https://data.rijksfinancien.nl/html/model/def/> .
@prefix manchester: <https://data.rijksfinancien.nl/manchester/model/def/> .
@prefix owl: <http://www.w3.org/2002/07/owl#>.
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix respec: <https://respec.org/model/def/> .
@prefix rule: <https://data.rijksfinancien.nl/html/model/rule/>.
@prefix shp: <https://data.rijksfinancien.nl/html/model/shp/>.
@prefix target: <https://data.rijksfinancien.nl/html/model/target/>.
@prefix sh: <http://www.w3.org/ns/shacl#>.
@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.
@prefix skos: <http://www.w3.org/2004/02/skos/core#>.

respec:introduction
    a owl:DatatypeProperty;
    rdfs:domain respec:Generation;
    rdfs:range xsd:string;
    skos:definition 'Property that links a text, in which an ontology is presented and introduced to an audience, to that very ontology.'@en;
    skos:prefLabel 'has introduction'@en.

shp:Document
  a sh:NodeShape;
  sh:rule rule:Document, rule:StaticElement, rule:Title, rule:Introduction, rule:Description, rule:Example, rule:NameSpace, rule:Abstract, rule:Configuration, rule:Classes, rule:ObjectProperties, rule:DatatypeProperties, rule:NodeShapes, rule:NamedIndividuals, rule:Concepts;
  sh:targetClass respec:Generation.

rule:Document
  a sh:SPARQLRule;
  skos:prefLabel 'Document rule'@en;
  rdfs:comment 'The Document rule creates a document and attaches its structure.'@en ;
  sh:construct """
prefix dct: <http://purl.org/dc/terms/>
prefix dom: <https://data.rijksfinancien.nl/dom/model/def/>
prefix html: <https://data.rijksfinancien.nl/html/model/def/> 
prefix prov: <http://www.w3.org/ns/prov#>
prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> 
prefix respec: <https://respec.org/model/def/> 

construct {
  ?documentID
    a html:Document, respec:Document ;
    ?element ?childID ;
    prov:wasGeneratedBy $this;
    dct:subject ?ontology.
    
} where {
  
  $this dct:subject ?ontology;
        respec:documentNamespace ?namespace.
  ?templateDocument rdf:type respec:TemplateDocument;
                    ?element ?child.
  ?child  a/ rdfs:subClassOf* dom:Element.
  
  # Create identifiers
  bind(iri(concat(str(?templateDocument),'-instance')) as ?documentID)
  bind(iri(concat(str(?child),'-instance')) as ?childID)
  
}""".

rule:StaticElement
  a sh:SPARQLRule;
  skos:prefLabel 'Static Element rule'@en;
  rdfs:comment 'The Static Element rule creates a unique element and attaches its structure.'@en ;
  sh:construct """
prefix dom: <https://data.rijksfinancien.nl/dom/model/def/>
prefix html: <https://data.rijksfinancien.nl/html/model/def/> 
prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> 
prefix respec: <https://respec.org/model/def/> 

construct {
  ?elementID
    a ?class ;
    rdfs:label ?label;
    html:fragment ?fragment;
    ?element ?childID ;
    ?attribute ?attributeValue.

} where {

  $this respec:documentLanguage ?language;
        respec:documentNamespace ?namespace.
  ?templateClass a ?class,
          respec:StaticElement.
  
  OPTIONAL {
  ?templateClass ?element ?child.
  ?child  a/ rdfs:subClassOf* dom:Element.}
  
  OPTIONAL {
  ?templateClass html:fragment ?fragment}
  
  OPTIONAL {
  ?templateClass rdfs:label ?label
  FILTER (LANG(?label) = ?language)
  }
  
  OPTIONAL {
  ?templateClass ?attribute ?attributeValue.
  ?attribute rdfs:subPropertyOf html:attribute.
  }
  ?class rdfs:subClassOf* dom:Element.
  
  # Create identifiers
  bind(iri(concat(str(?templateClass),'-instance')) as ?elementID)
  bind(iri(concat(str(?child),'-instance')) as ?childID)
  
}""".

rule:Title
  a sh:SPARQLRule;
  skos:prefLabel 'Title rule'@en;
  rdfs:comment 'The Title rule creates a title for the ontology in the document.'@en ;
  sh:construct """
prefix dct: <http://purl.org/dc/terms/>
prefix dc:  <http://purl.org/dc/elements/1.1/>
prefix dom: <https://data.rijksfinancien.nl/dom/model/def/>
prefix html: <https://data.rijksfinancien.nl/html/model/def/> 
prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> 
prefix respec: <https://respec.org/model/def/> 
prefix schema: <http://schema.org/>

construct {
  ?titleTextElementID rdf:type html:TextElement;
  html:fragment ?ontologyTitle.
    
} where {
   {?titleTextElement a respec:TitleTextElement}
  OPTIONAL
  {$this dct:subject ?ontology;
         respec:documentLanguage ?language.
  ?ontology dc:title ?ontologyTitle1.
  FILTER(LANG(?ontologyTitle1)=?language)}
  OPTIONAL
  {$this dct:subject ?ontology;
         respec:documentLanguage ?language.
  ?ontology dct:title ?ontologyTitle2.
  FILTER(LANG(?ontologyTitle2)=?language)}
  OPTIONAL
  {$this dct:subject ?ontology;
         respec:documentLanguage ?language.
  ?ontology schema:name ?ontologyTitle3.
  FILTER(LANG(?ontologyTitle3)=?language)}
   
  BIND(COALESCE(?ontologyTitle1, ?ontologyTitle2, ?ontologyTitle3, "Unknown title") as ?ontologyTitle)
  # Create identifiers
  bind(iri(concat(str(?titleTextElement),'-instance')) as ?titleTextElementID)
    
}""".

rule:Introduction
  a sh:SPARQLRule;
  skos:prefLabel 'Introduction rule'@en;
  rdfs:comment 'The Introduction rule creates an introduction for the ontology in the document.'@en ;
  sh:construct """
prefix dct: <http://purl.org/dc/terms/>
prefix dc:  <http://purl.org/dc/elements/1.1/>
prefix dom: <https://data.rijksfinancien.nl/dom/model/def/>
prefix function: <https://data.rijksfinancien.nl/html/model/function/>
prefix html: <https://data.rijksfinancien.nl/html/model/def/> 
prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> 
prefix respec: <https://respec.org/model/def/> 
prefix schema: <http://schema.org/>
prefix skos: <http://www.w3.org/2004/02/skos/core#>

construct {
  ?introductionSectionInstance        rdf:type html:Section;
                                      rdf:_1 ?generalIntroductionH2;
                                      rdf:_2 ?generalIntroduction_text;
                                      rdf:_3 ?introductionBackgroundSection;
                                      rdf:_4 ?introductionOntologySection;
                                      rdf:_5 ?introductionAudienceSection;
                                      html:class "informative".
  ?generalIntroductionH2              rdf:type html:H2;
                                      rdf:_1 ?generalIntroduction_title.
  ?generalIntroduction_title          rdf:type html:TextElement;
                                      html:fragment "Introduction".
  ?generalIntroduction_text           rdf:type html:TextElement;
                                      html:fragment ?generalIntroduction.
  ?introductionBackgroundSection      rdf:type html:Section;
                                      rdf:_1 ?introductionBackgroundH2;
                                      rdf:_2 ?introductionBackground_text.
  ?introductionBackgroundH2           rdf:type html:H2;
                                      rdf:_1 ?introductionBackground_title.
  ?introductionBackground_title       rdf:type html:TextElement;
                                      html:fragment "Background".
  ?introductionBackground_text        rdf:type html:TextElement;
                                      html:fragment ?introductionBackground.	
  ?introductionOntologySection        rdf:type html:Section;
                                      rdf:_1 ?introductionOntologyH2;
                                      rdf:_2 ?introductionOntology_text.
  ?introductionOntologyH2             rdf:type html:H2;
                                      rdf:_1 ?introductionOntology_title.
  ?introductionOntology_title         rdf:type html:TextElement;
                                      html:fragment "Objective".
  ?introductionOntology_text          rdf:type html:TextElement;
                                      html:fragment ?introductionObjective.
  ?introductionAudienceSection        rdf:type html:Section;
                                      rdf:_1 ?introductionAudienceH2;
                                      rdf:_2 ?introductionAudience_text.
  ?introductionAudienceH2             rdf:type html:H2;
                                      rdf:_1 ?introductionAudience_title.
  ?introductionAudience_title         rdf:type html:TextElement;
                                      html:fragment "Audience".
  ?introductionAudience_text          rdf:type html:TextElement;
                                      html:fragment ?introductionAudience.
} where {

   {$this respec:documentLanguage ?language.
   ?introductionSection a respec:Introduction}
   OPTIONAL
   {$this respec:introduction ?introduction.
   FILTER (LANG(?introduction) = ?language)}
   OPTIONAL
   {$this respec:background ?background.
   FILTER (LANG(?background) = ?language)}
   OPTIONAL
   {$this respec:objective ?objective.
   FILTER (LANG(?objective) = ?language)}
   OPTIONAL
   {$this respec:audience ?audience.
   FILTER (LANG(?audience) = ?language)}
    
  BIND(COALESCE(?introduction, "This specification document does not describe an introduction to the ontology.") as ?generalIntroduction) 
  BIND(COALESCE(?background, "This specification document does not describe the background of the ontology.") as ?introductionBackground) 
  BIND(COALESCE(?objective, "This specification document does not define the objective of the ontology.") as ?introductionObjective) 
  BIND(COALESCE(?audience, "This specification document does not describe the intended audience of the ontology.") as ?introductionAudience) 
  
  # Create identifiers
  bind(iri(concat(str(?introductionSection),'-instance')) as ?introductionSectionInstance)
  bind(iri(concat(str(?introductionSectionInstance),'-1')) as ?generalIntroductionH2 )
  bind(iri(concat(str(?introductionSectionInstance),'-2')) as ?generalIntroduction_text)
  bind(iri(concat(str(?generalIntroductionH2 ),'-1')) as ?generalIntroduction_title )
    
  bind(iri(concat(str(?introductionSectionInstance),'-3')) as ?introductionBackgroundSection )
  bind(iri(concat(str(?introductionBackgroundSection),'-1')) as ?introductionBackgroundH2)
  bind(iri(concat(str(?introductionBackgroundSection),'-2')) as ?introductionBackground_text)
  bind(iri(concat(str(?introductionBackgroundH2),'-1')) as ?introductionBackground_title)
  
  bind(iri(concat(str(?introductionSectionInstance),'-4')) as ?introductionOntologySection )
  bind(iri(concat(str(?introductionOntologySection),'-1')) as ?introductionOntologyH2)
  bind(iri(concat(str(?introductionOntologySection),'-2')) as ?introductionOntology_text)
  bind(iri(concat(str(?introductionOntologyH2),'-1')) as ?introductionOntology_title)
  
  bind(iri(concat(str(?introductionSectionInstance),'-5')) as ?introductionAudienceSection )
  bind(iri(concat(str(?introductionAudienceSection),'-1')) as ?introductionAudienceH2)
  bind(iri(concat(str(?introductionAudienceSection),'-2')) as ?introductionAudience_text)
  bind(iri(concat(str(?introductionAudienceH2),'-1')) as ?introductionAudience_title)
  
}""".

rule:Description
  a sh:SPARQLRule;
  skos:prefLabel 'Description rule'@en;
  rdfs:comment 'The Description rule creates a description for the ontology in the document.'@en ;
  sh:construct """
prefix dct: <http://purl.org/dc/terms/>
prefix dc:  <http://purl.org/dc/elements/1.1/>
prefix dom: <https://data.rijksfinancien.nl/dom/model/def/>
prefix html: <https://data.rijksfinancien.nl/html/model/def/> 
prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> 
prefix respec: <https://respec.org/model/def/> 
prefix schema: <http://schema.org/>
prefix skos: <http://www.w3.org/2004/02/skos/core#>

construct {
  ?descriptionTextElementID rdf:type html:TextElement;
  html:fragment ?ontologyDescription.
    
} where {
   {?textElement a respec:Overview.
   $this respec:documentLanguage ?language;
         dct:subject ?ontology.}
  OPTIONAL
  {?ontology dc:description ?ontologyDescription1
  FILTER (LANG(?ontologyDescription1) = ?language)}
  OPTIONAL
  {?ontology dct:description ?ontologyDescription2
  FILTER (LANG(?ontologyDescription2) = ?language)}
  OPTIONAL
  {?ontology rdfs:comment ?ontologyDescription3
  FILTER (LANG(?ontologyDescription3) = ?language)}
  OPTIONAL
  {?ontology schema:description ?ontologyDescription4
  FILTER (LANG(?ontologyDescription4) = ?language)}
  OPTIONAL
  {?ontology skos:note ?ontologyDescription5
  FILTER (LANG(?ontologyDescription5) = ?language)}

  BIND(COALESCE(?ontologyDescription1, ?ontologyDescription2, ?ontologyDescription3, ?ontologyDescription4, ?ontologyDescription5,"Description not available") as ?ontologyDescription)
  # Create identifiers
  bind(iri(concat(str(?textElement),'-instance')) as ?descriptionTextElementID)
    
}""".

rule:Example
  a sh:SPARQLRule;
  skos:prefLabel 'Example rule'@en;
  rdfs:comment 'The Example rule creates an example for the ontology in the document.'@en ;
  sh:construct """
prefix dct: <http://purl.org/dc/terms/>
prefix dc:  <http://purl.org/dc/elements/1.1/>
prefix dom: <https://data.rijksfinancien.nl/dom/model/def/>
prefix function: <https://data.rijksfinancien.nl/html/model/function/>
prefix html: <https://data.rijksfinancien.nl/html/model/def/> 
prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> 
prefix respec: <https://respec.org/model/def/> 
prefix schema: <http://schema.org/>
prefix skos: <http://www.w3.org/2004/02/skos/core#>

construct {
  ?exampleElementAside   rdf:type html:Aside;
                         html:class 'example';
                         rdf:_1 ?exampleParagraph.
  ?exampleParagraph      rdf:type html:P;
                         rdf:_1 ?examplePre.
  ?examplePre            rdf:type html:Pre;
                         rdf:_1 ?exampleTextElement.
  ?exampleTextElement    rdf:type html:TextElement;
                         html:fragment ?ontologyExample.
} where {
  
  ?exampleElement a respec:Example.
  $this respec:documentLanguage ?language;
        dct:subject ?ontology.
  ?ontology skos:example ?example.
  FILTER (LANG(?example) = ?language)
  BIND(function:escapeHTML(?example) as ?ontologyExample)
  
  # Create identifiers
  BIND(IRI(CONCAT(STR(?exampleElement),'-instance')) as ?exampleElementAside)
  BIND(IRI(CONCAT(STR(?exampleElementAside), '-1')) as ?exampleParagraph)
  BIND(IRI(CONCAT(STR(?exampleParagraph),'-1')) as ?examplePre)
  BIND(IRI(CONCAT(STR(?examplePre),'-1')) as ?exampleTextElement)
    
}""".

rule:NameSpace
  a sh:SPARQLRule;
  skos:prefLabel 'Namespace rule'@en;
  rdfs:comment 'The Namespace rule creates a namespace declaration for the ontology in the document.'@en ;
  sh:construct """
PREFIX html: <https://data.rijksfinancien.nl/html/model/def/> 
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX respec: <https://respec.org/model/def/> 
PREFIX sh: <http://www.w3.org/ns/shacl#>
PREFIX vann: <http://purl.org/vocab/vann/>

construct {
  ?namespaceTableBodyInstance       ?rdf_member ?namespaceTableDataRow.
  ?namespaceTableDataRow            rdf:type html:Row;
                                    rdf:_1 ?namespacePrefixDataCell;
                                    rdf:_2 ?namespaceIRIDataCell.
  ?namespacePrefixDataCell          rdf:type html:DataCell;
                                    rdf:_1 ?namespacePrefixDataCell_text.
  ?namespacePrefixDataCell_text     rdf:type html:TextElement;
                                    html:fragment ?prefix.
  ?namespaceIRIDataCell             rdf:type html:DataCell;
                                    rdf:_1 ?namespaceIRIDataCell_text.
  ?namespaceIRIDataCell_text        rdf:type html:TextElement;
                                    html:fragment ?namespace.
  ?namespaceDefinitionDataCell      rdf:type html:DataCell;
                                    rdf:_1 ?namespaceDefinitionDataCell_text.
} where {
  ?nameSpaceTableBody a respec:NameSpace.
  {
  SELECT ?prefix ?namespace (COUNT(?prevPrefix) + 2 AS ?rowmember) WHERE {

  # Get the namespace declarations for the ontology ordered by prefix
  
    {
      $this sh:declare ?prefixDeclaration.
      ?prefixDeclaration sh:namespace ?namespace;
                         # e.g. "http://example.org/"
                         sh:prefix ?prefix.
      # e.g. "ex"
    }
    UNION 

    # Get the namespace declaration for the ontology itself
    {
      $this vann:preferredNamespaceUri ?namespace;
                # e.g. "http://example.org/"
                vann:preferredNamespacePrefix ?prefix.
      # e.g. "ex"
    }
  
  OPTIONAL{
    {
      ?ontology sh:declare ?prevPrefixDeclaration.
      ?prevPrefixDeclaration sh:namespace ?prevNamespace;
                             # e.g. "http://example.org/"
                             sh:prefix ?prevPrefix.
      # e.g. "ex"
    }
    UNION 

    {
      ?ontology vann:preferredNamespaceUri ?prevNamespace;
                    # e.g. "http://example.org/"
                    vann:preferredNamespacePrefix ?prevPrefix.
      # e.g. "ex"
    }
    FILTER (?prevPrefix < ?prefix)
  }
}
GROUP BY ?prefix ?namespace
ORDER BY ?prefix}

BIND(IRI(CONCAT(str(rdf:),"_", str(?rowmember))) as ?rdf_member)
# Create identifiers
BIND(IRI(CONCAT(STR(?nameSpaceTableBody),'-instance'))                  as ?namespaceTableBodyInstance)
BIND(IRI(CONCAT(STR(?namespaceTableBodyInstance), '-',STR(?rowmember))) as ?namespaceTableDataRow)
BIND(IRI(CONCAT(STR(?namespaceTableDataRow),'-1'))                      as ?namespacePrefixDataCell)
BIND(IRI(CONCAT(STR(?namespaceTableDataRow),'-2'))                      as ?namespaceIRIDataCell)
BIND(IRI(CONCAT(STR(?namespacePrefixDataCell),'-1'))                    as ?namespacePrefixDataCell_text)
BIND(IRI(CONCAT(STR(?namespaceIRIDataCell),'-1'))                       as ?namespaceIRIDataCell_text)
}
""".

rule:Abstract
  a sh:SPARQLRule;
  skos:prefLabel 'Abstract rule'@en;
  rdfs:comment 'The Abstract rule creates an abstract for the ontology in the document.'@en ;
  sh:construct """
prefix dct: <http://purl.org/dc/terms/>
prefix dc:  <http://purl.org/dc/elements/1.1/>
prefix dom: <https://data.rijksfinancien.nl/dom/model/def/>
prefix html: <https://data.rijksfinancien.nl/html/model/def/> 
prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> 
prefix respec: <https://respec.org/model/def/> 

construct {
  ?abstractTextElementID rdf:type html:TextElement;
  html:fragment ?ontologyAbstract.
    
} where {
   {?textElement a respec:Abstract.
    $this respec:documentLanguage ?language;
          dct:subject ?ontology.}
  OPTIONAL
  {?ontology dc:abstract ?ontologyAbstract1
  FILTER (LANG(?ontologyAbstract1) = ?language)}
  OPTIONAL
  {?ontology dct:abstract ?ontologyAbstract2
  FILTER (LANG(?ontologyAbstract2) = ?language)}
  BIND(COALESCE(?ontologyAbstract1, ?ontologyAbstract2, "Abstract not available") as ?ontologyAbstract)
  # Create identifiers
  bind(iri(concat(str(?textElement),'-instance')) as ?abstractTextElementID)
    
}""".       
    

rule:Configuration
  a sh:SPARQLRule;
  skos:prefLabel 'Configuration rule'@en;
  rdfs:comment 'The Configuration rule creates the configuration information for the ontology in the document.'@en ;
  sh:construct """
prefix dct: <http://purl.org/dc/terms/>
prefix dc:  <http://purl.org/dc/elements/1.1/>
prefix html: <https://data.rijksfinancien.nl/html/model/def/> 
prefix owl: <http://www.w3.org/2002/07/owl#>
prefix prov: <http://www.w3.org/ns/prov#>
prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> 
prefix respec: <https://respec.org/model/def/> 
prefix schema: <http://schema.org/>

construct {
  
  ?configurationElementID rdf:type html:TextElement;
  html:fragment ?fragment4.
    
} where {
  
  ?textElement a respec:Configuration;
               html:fragment ?fragment.
  $this respec:documentLanguage ?language;
        dct:subject ?ontology.
  optional
  {?ontology owl:versionIRI ?ontologyVersion1}
  optional
  {?ontology schema:schemaVersion ?ontologyVersion2}
  optional
  {?ontology owl:versionInfo ?ontologyVersionText1}
  optional
  {?ontology dct:publisher ?workinggroup}
  optional
  {?ontology dct:source ?github}
  { select (group_concat(?ontologyAuthorString;separator='') as ?ontologyAuthors) 
    {
  optional
  {?ontology dct:creator ?ontologyAuthor1}
  optional
  {?ontology dc:creator ?ontologyAuthor2}
  optional
  {?ontology schema:creator ?ontologyAuthor3}
  optional
  {?ontology prov:wasAttributedTo ?ontologyAuthor4}

  BIND(COALESCE(?ontologyAuthor1, ?ontologyAuthor2, ?ontologyAuthor3, ?ontologyAuthor4, "Author unknown") as ?ontologyAuthor)
  BIND(CONCAT('{name: "', STR(?ontologyAuthor), '"},') as ?ontologyAuthorString)
    }
  }
  
  BIND(COALESCE(?ontologyVersion1, ?ontologyVersion2, "Version IRI not available") as ?ontologyVersionIRI)
  BIND(REPLACE(?fragment, 'VersionURL', str(?ontologyVersionIRI)) as ?fragment1)
  BIND(REPLACE(?fragment1, 'working-group', str(?workinggroup)) as ?fragment2)
  BIND(REPLACE(?fragment2, 'some-org/mySpec', str(?github)) as ?fragment3)
  BIND(REPLACE(?fragment3, 'name: "Your Name"', str(?ontologyAuthors)) as ?fragment4)
  
  # Create identifiers
  bind(iri(concat(str(?textElement),'-instance')) as ?configurationElementID)
  
}""".  

rule:Classes
  a sh:SPARQLRule;
  skos:prefLabel 'Classes rule'@en;
  rdfs:comment 'The Classes rule creates a section of classes for the ontology in the document.'@en ;
  sh:construct """
prefix dct: <http://purl.org/dc/terms/>
prefix dc:  <http://purl.org/dc/elements/1.1/>
prefix dom: <https://data.rijksfinancien.nl/dom/model/def/>
prefix function: <https://data.rijksfinancien.nl/html/model/function/>
prefix html: <https://data.rijksfinancien.nl/html/model/def/>
prefix manchester: <https://data.rijksfinancien.nl/manchester/model/def/>
prefix owl: <http://www.w3.org/2002/07/owl#>
prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>
prefix respec: <https://respec.org/model/def/>
prefix schema: <http://schema.org/>
prefix skos: <http://www.w3.org/2004/02/skos/core#>
prefix vann: <http://purl.org/vocab/vann/>

construct {

      ?divDefinitionClass1Instance            rdf:type html:Div;
                                              ?memberClassString ?divDefinitionClass2Instance;
                                              html:fragment ?absenceOfClassDefinitions.
      ?divDefinitionClass2Instance            rdf:type html:Section;
                                              rdf:_1 ?class_title_instance_h2;
                                              rdf:_2 ?class_IRI_p;
                                              rdf:_3 ?class_linebreak_instance1; 
                                              rdf:_4 ?class_definition_instance;
                                              rdf:_5 ?class_linebreak_instance2;  
                                              rdf:_6 ?class_linebreak_instance3;
                                              rdf:_7 ?manchester_syntax_instance.
      ?class_title_instance_h2                rdf:type html:H2;
                                              rdf:_1 ?class_dfn_instance.
      ?class_dfn_instance                     rdf:type html:Dfn;
                                              rdf:_1 ?class_title_text_instance.
      ?class_title_text_instance              rdf:type html:TextElement;
                                              html:fragment ?cleanedManchesterLabel.
      ?class_IRI_p                            rdf:type html:P;
                                              rdf:_1 ?class_IRI_strong;
                                              rdf:_2 ?class_IRI_a.
      ?class_IRI_strong                       rdf:type html:Strong;
                                              rdf:_1 ?class_IRI_text.
      ?class_IRI_text                         rdf:type html:TextElement;
                                              html:fragment 'IRI: '.
      ?class_IRI_a                            rdf:type html:A;
                                              html:href ?IRI_value_text;
                                              rdf:_1 ?IRI_value.
      ?IRI_value                              rdf:type html:TextElement;
                                              html:fragment ?IRI_value_text.
      ?class_definition_instance              rdf:type html:TextElement;
                                              html:fragment ?classDefinition.
      ?manchester_syntax_instance                   rdf:type html:Aside;
                                                      html:class "note" ;
                                                      html:title "Manchester Syntax (Extended)";
                                                      rdf:_1 ?manchester_syntax_code_instance.
      ?manchester_syntax_code_instance              rdf:type html:Code;
                                                      rdf:_1 ?manchester_table_instance.
      ?manchester_table_instance                    rdf:type html:Table;
                                                      rdf:_1 ?manchester_table_body_instance_class;
                                                      rdf:_2 ?manchester_table_body_instance_equivalence;
                                                      rdf:_3 ?manchester_table_body_instance_subclass;
                                                      rdf:_4 ?manchester_table_body_instance_seeAlso.
      ?manchester_table_body_instance_class          rdf:type html:TableBody;
                                                      rdf:_1  ?manchester_definition_tr_class;
                                                      rdf:_2  ?manchester_definition_tr_class_empty_row.
      ?manchester_definition_tr_class               rdf:type html:Row;
                                                      rdf:_1 ?manchester_definition_class_type_td;
                                                      rdf:_2 ?manchester_definition_class_value_td.
      ?manchester_definition_class_type_td          rdf:type html:DataCell;
                                                      rdf:_1 ?manchester_definition_class_type_text. 
      ?manchester_definition_class_type_text        rdf:type html:TextElement;
                                                      html:fragment 'Class:'.
      ?manchester_definition_class_value_td         rdf:type html:DataCell;
                                                      rdf:_1 ?manchester_definition_class_value_text.
      ?manchester_definition_class_value_text       rdf:type html:TextElement;
                                                      html:fragment ?cleanedManchesterLabel.
      ?manchester_definition_tr_class_empty_row     rdf:type html:Row;
                                                      rdf:_1 ?manchester_definition_class_empty_td1;
                                                      rdf:_2 ?manchester_definition_class_empty_td2.
      ?manchester_definition_class_empty_td1          rdf:type html:DataCell.
      ?manchester_definition_class_empty_td2          rdf:type html:DataCell.
      ?manchester_table_body_instance_equivalence   rdf:type html:TableBody;
                                                      ?memberManchesterStringEquivalentTo  ?manchester_definition_tr_equivalence.
      ?manchester_definition_tr_equivalence         rdf:type html:Row;
                                                      rdf:_1 ?manchester_definition_equivalence_type_td;
                                                      rdf:_2 ?manchester_definition_equivalence_value_td.
      ?manchester_definition_equivalence_type_td    rdf:type html:DataCell;
                                                      rdf:_1 ?manchester_definition_equivalence_type_text. 
      ?manchester_definition_equivalence_type_text  rdf:type html:TextElement;
                                                      html:fragment 'EquivalentTo:'.
      ?manchester_definition_equivalence_value_td   rdf:type html:DataCell;
                                                      rdf:_1 ?manchester_definition_equivalence_value_text.
      ?manchester_definition_equivalence_value_text rdf:type html:TextElement;
                                                      html:fragment ?manchesterDefinition.
      ?manchester_table_body_instance_subclass       rdf:type html:TableBody;
                                                      ?memberManchesterStringSubClassOf  ?manchester_definition_tr_subclass.
      ?manchester_definition_tr_subclass            rdf:type html:Row;
                                                      rdf:_1 ?manchester_definition_subclass_type_td;
                                                      rdf:_2 ?manchester_definition_subclass_value_td.
      ?manchester_definition_subclass_type_td       rdf:type html:DataCell;
                                                      rdf:_1 ?manchester_definition_subclass_type_text. 
      ?manchester_definition_subclass_type_text     rdf:type html:TextElement;
                                                      html:fragment 'SubClassOf:'.
      ?manchester_definition_subclass_value_td      rdf:type html:DataCell;
                                                      rdf:_1 ?manchester_definition_subclass_value_text.
      ?manchester_definition_subclass_value_text    rdf:type html:TextElement;
                                                      html:fragment ?manchesterDefinitionS.
      ?manchester_table_body_instance_seeAlso       rdf:type html:TableBody;
                                                      ?memberManchesterStringSeeAlso  ?manchester_definition_tr_seeAlso.
      ?manchester_definition_tr_seeAlso             rdf:type html:Row;
                                                      rdf:_1 ?manchester_definition_seeAlso_type_td;
                                                      rdf:_2 ?manchester_definition_seeAlso_value_td.
      ?manchester_definition_seeAlso_type_td        rdf:type html:DataCell;
                                                      rdf:_1 ?manchester_definition_seeAlso_type_text. 
      ?manchester_definition_seeAlso_type_text      rdf:type html:TextElement;
                                                      html:fragment 'SeeAlso:'.
      ?manchester_definition_seeAlso_value_td       rdf:type html:DataCell;
                                                      rdf:_1 ?manchester_definition_seeAlso_value_text.
      ?manchester_definition_seeAlso_value_text     rdf:type html:TextElement;
                                                      html:fragment ?seeAlsoLabel.
                                                    
      ?class_linebreak_instance1                          rdf:type html:Br.
      ?class_linebreak_instance2                          rdf:type html:Br.
      ?class_linebreak_instance3                          rdf:type html:Br.
      ?class_linebreak_instance5                          rdf:type html:Br.
      ?class_linebreak_instance6                          rdf:type html:Br.
}
where  {

  # Get the template

  {
    ?template rdf:type respec:ClassDefinition.
  }

  # Get the class from the ontology, the label and description, and the sequence order in which the class appears amidst other classes alphanumerically.
  {
    select ?class ?manchesterLabel ?classDefinition_original ?seeAlsoLabel ?memberClass ?manchesterDefinition ?manchesterDefinitionS ?memberManchesterEquivalentTo ?memberManchesterSubClassOf
    where {
      # Get the class ordered alphabetically on its label
      {
        select ?class ?manchesterLabel ?classDefinition_original ?seeAlsoLabel (count(?prevClass) + 1 as ?memberClass)
        where {
          ?class manchester:type 'CLASS'.
          ?class manchester:label ?manchesterLabel.
          ?class rdfs:isDefinedBy ?ontology.
          $this  dct:subject ?ontology;
                 respec:documentLanguage ?language.

          optional
          {
            ?class skos:definition ?classDefinition_original.
            filter (lang(?classDefinition_original) = ?language)
          }
          
          optional
          {
            ?class rdfs:seeAlso ?resource.
            optional {?resource manchester:label ?seeAlsoManchesterLabel.}
            BIND(COALESCE(?seeAlsoManchesterLabel, IF(isIRI(?resource), function:getPrefixedIRI(?resource), ?unboundDummy)) as ?seeAlsoLabel)
          }

          optional {
            ?prevClass manchester:type 'CLASS'.
            ?prevClass manchester:label ?prevLabel .
            filter(?prevLabel < ?manchesterLabel)
          }
        }
        group by ?class ?manchesterLabel ?classDefinition_original ?seeAlsoLabel
        order by ?manchesterLabel
      }
      optional # EquivalentTo
      {
        ?class manchester:type 'CLASS'.
        # Get the possibly multiple definitions of the class, ordered alphabetically
        {
          select ?class ?manchesterDefinition (count(?prevManchesterDefinition) + 1 as ?memberManchesterEquivalentTo)
          where {

            ?class manchester:equivalentTo ?manchesterDefinition.
            
            optional {
              ?prevClassE manchester:equivalentTo ?prevManchesterDefinition.
              filter(?prevManchesterDefinition < ?manchesterDefinition)
            }
          }
          group by ?class ?manchesterDefinition
          order by ?class ?manchesterDefinition
        }
      }
      optional # SubClassOf
      {
        ?class manchester:type 'CLASS'.
        # Get the possibly multiple definitions of the class, ordered alphabetically
        {
          select ?class ?manchesterDefinitionS (count(?prevManchesterDefinitionS) + 1 as ?memberManchesterSubClassOf)
          where {


            ?class manchester:subClassOf ?manchesterDefinitionS.

            optional {

              ?prevClassS manchester:subClassOf ?prevManchesterDefinitions.

              filter(?prevManchesterDefinitionS < ?manchesterDefinitionS)
            }
          }
          group by ?class ?manchesterDefinitionS
          order by ?class ?manchesterDefinitionS
        }
      }
    }
  }

  # If there are no classes defined by this ontology, then add text indicating this accordingly.
   
  BIND(IF(!BOUND(?class), "This ontology does not define any classes.", ?unboundDummy) as ?absenceOfClassDefinitions)
  
  # Establish order predicate
  BIND("1" as ?memberManchesterSeeAlso) # temporary solution, for now only one rdfs:seeAlso relation is expected per class.
  BIND(IRI(CONCAT(str(rdf:),"_", str(?memberClass))) as ?memberClassString) #this is the rdf:_x property that indicates the order in which the class appears
  BIND(IRI(CONCAT(str(rdf:),"_", str(?memberManchesterEquivalentTo))) as ?memberManchesterStringEquivalentTo) #this is the rdf:_x property that indicates the order in which the manchester definition appears
  BIND(IRI(CONCAT(str(rdf:),"_", str(?memberManchesterSubClassOf))) as ?memberManchesterStringSubClassOf) #this is the rdf:_x property that indicates the order in which the manchester definition appears
  BIND(IRI(CONCAT(str(rdf:),"_", str(?memberManchesterSeeAlso))) as ?memberManchesterStringSeeAlso) #this is the rdf:_x property that indicates the order in which the rdfs:seeAlso relation appears
  # Clean up text (prevent html code)
  
  BIND(function:escapeHTML(COALESCE(?classDefinition_original, "This ontology does not provide a definition for the class.")) as ?classDefinition)
  BIND(function:escapeHTML(?manchesterLabel) as ?cleanedManchesterLabel)
  
  # Establishing the IRI of the class

  BIND(STR(?class) as ?IRI_value_text)
  
  # Create identifiers - generic
  
  bind(IRI(CONCAT(STR(?template),'-instance')) as ?divDefinitionClass1Instance)
  bind(IRI(CONCAT(STR(?divDefinitionClass1Instance), '-', str(?memberClass),'-1')) as ?divDefinitionClass2Instance)
  bind(IRI(CONCAT(STR(?divDefinitionClass2Instance), '-1')) as ?class_title_instance_h2)
  bind(IRI(CONCAT(STR(?divDefinitionClass2Instance), '-2')) as ?class_IRI_p)
  bind(IRI(CONCAT(STR(?divDefinitionClass2Instance), '-3')) as ?class_linebreak_instance1)
  bind(IRI(CONCAT(STR(?divDefinitionClass2Instance), '-4')) as ?class_definition_instance)
  bind(IRI(CONCAT(STR(?divDefinitionClass2Instance), '-5')) as ?class_linebreak_instance2)
  bind(IRI(CONCAT(STR(?divDefinitionClass2Instance), '-6')) as ?class_linebreak_instance3)
  bind(IRI(CONCAT(STR(?divDefinitionClass2Instance), '-7')) as ?manchester_syntax_instance)
  bind(IRI(CONCAT(STR(?class_IRI_p), '-1')) as ?class_IRI_strong)
  bind(IRI(CONCAT(STR(?class_IRI_p), '-2')) as ?class_IRI_a)
  bind(IRI(CONCAT(STR(?class_IRI_strong), '-1')) as ?class_IRI_text)
  bind(IRI(CONCAT(STR(?class_IRI_a), '-1')) as ?IRI_value)
  bind(IRI(CONCAT(STR(?class_title_instance_h2), '-1')) as ?class_dfn_instance)
  bind(IRI(CONCAT(STR(?class_dfn_instance), '-1')) as ?class_title_text_instance)
    
  # Create identifiers - Manchester Syntax 

  bind(IRI(CONCAT(STR(?manchester_syntax_instance), '-1')) as ?manchester_syntax_code_instance)
  bind(IRI(CONCAT(STR(?manchester_syntax_code_instance), '-1')) as ?manchester_table_instance)

  bind(IRI(CONCAT(STR(?manchester_table_instance), '-1')) as ?manchester_table_body_instance_class)
  bind(IF(BOUND(?manchesterDefinition), IRI(CONCAT(STR(?manchester_table_instance), '-2')), ?unboundDummy) as ?manchester_table_body_instance_equivalence)
  bind(IF(BOUND(?manchesterDefinitionS), IRI(CONCAT(STR(?manchester_table_instance), '-3')), ?unboundDummy) as ?manchester_table_body_instance_subclass)
  bind(IF(BOUND(?seeAlsoLabel), IRI(CONCAT(STR(?manchester_table_instance), '-4')), ?unboundDummy) as ?manchester_table_body_instance_seeAlso)

  bind(IRI(CONCAT(STR(?manchester_table_body_instance_class), '-1')) as ?manchester_definition_tr_class)
  bind(IRI(CONCAT(STR(?manchester_table_body_instance_class), '-2')) as ?manchester_definition_tr_class_empty_row)
  bind(IRI(CONCAT(STR(?manchester_definition_tr_class), '-1')) as ?manchester_definition_class_type_td)
  bind(IRI(CONCAT(STR(?manchester_definition_tr_class), '-2')) as ?manchester_definition_class_value_td)
  bind(IRI(CONCAT(STR(?manchester_definition_tr_class_empty_row), '-1')) as ?manchester_definition_class_empty_td1)
  bind(IRI(CONCAT(STR(?manchester_definition_tr_class_empty_row), '-2')) as ?manchester_definition_class_empty_td2)
  bind(IRI(CONCAT(STR(?manchester_definition_class_type_td), '-1')) as ?manchester_definition_class_type_text)
  bind(IRI(CONCAT(STR(?manchester_definition_class_value_td), '-1')) as ?manchester_definition_class_value_text)

  bind(IRI(CONCAT(STR(?manchester_table_body_instance_equivalence), '-', str(?memberManchesterEquivalentTo))) as ?manchester_definition_tr_equivalence)
  bind(IRI(CONCAT(STR(?manchester_definition_tr_equivalence), '-1')) as ?manchester_definition_equivalence_type_td)
  bind(IRI(CONCAT(STR(?manchester_definition_tr_equivalence), '-2')) as ?manchester_definition_equivalence_value_td)
  bind(IRI(CONCAT(STR(?manchester_definition_equivalence_type_td), '-1')) as ?manchester_definition_equivalence_type_text)
  bind(IRI(CONCAT(STR(?manchester_definition_equivalence_value_td) , '-1')) as ?manchester_definition_equivalence_value_text)

  bind(IRI(CONCAT(STR(?manchester_table_body_instance_subclass) , '-', str(?memberManchesterSubClassOf))) as ?manchester_definition_tr_subclass)
  bind(IRI(CONCAT(STR(?manchester_definition_tr_subclass) , '-1')) as ?manchester_definition_subclass_type_td)
  bind(IRI(CONCAT(STR(?manchester_definition_tr_subclass) , '-2')) as ?manchester_definition_subclass_value_td)
  bind(IRI(CONCAT(STR(?manchester_definition_subclass_type_td) , '-1')) as ?manchester_definition_subclass_type_text)
  bind(IRI(CONCAT(STR(?manchester_definition_subclass_value_td) , '-1')) as ?manchester_definition_subclass_value_text)

  bind(IRI(CONCAT(STR(?manchester_table_body_instance_seeAlso) , '-',str(?memberManchesterSeeAlso))) as ?manchester_definition_tr_seeAlso)
  bind(IRI(CONCAT(STR(?manchester_definition_tr_seeAlso), '-1')) as ?manchester_definition_seeAlso_type_td)
  bind(IRI(CONCAT(STR(?manchester_definition_tr_seeAlso), '-2')) as ?manchester_definition_seeAlso_value_td)
  bind(IRI(CONCAT(STR(?manchester_definition_seeAlso_type_td), '-1')) as ?manchester_definition_seeAlso_type_text)
  bind(IRI(CONCAT(STR(?manchester_definition_seeAlso_value_td), '-1')) as ?manchester_definition_seeAlso_value_text)
  
}

""".

rule:ObjectProperties
  a sh:SPARQLRule;
  skos:prefLabel 'Object properties rule'@en;
  rdfs:comment 'The object properties rule creates a section of object properties for the ontology in the document.'@en ;
  sh:construct """
prefix dct: <http://purl.org/dc/terms/>
prefix dc:  <http://purl.org/dc/elements/1.1/>
prefix dom: <https://data.rijksfinancien.nl/dom/model/def/>
prefix function: <https://data.rijksfinancien.nl/html/model/function/>
prefix html: <https://data.rijksfinancien.nl/html/model/def/>
prefix manchester: <https://data.rijksfinancien.nl/manchester/model/def/>
prefix owl: <http://www.w3.org/2002/07/owl#>
prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>
prefix respec: <https://respec.org/model/def/>
prefix schema: <http://schema.org/>
prefix skos: <http://www.w3.org/2004/02/skos/core#>
prefix vann: <http://purl.org/vocab/vann/>

construct {

      ?divDefinitionObjectProperty1Instance                   rdf:type html:Div;
                                                              ?rdf_member ?divDefinitionObjectProperty2Instance;
                                                              html:fragment ?absenceOfObjectPropertyDefinitions.
      ?divDefinitionObjectProperty2Instance                   rdf:type html:Section;
                                                              rdf:_1 ?objectproperty_title_instance_h2;
                                                              rdf:_2 ?objectproperty_IRI_p;
                                                              rdf:_3 ?objectproperty_linebreak_instance1; 
                                                              rdf:_4 ?objectproperty_definition_instance;
                                                              rdf:_5 ?objectproperty_linebreak_instance2;  
                                                              rdf:_6 ?objectproperty_linebreak_instance3;
                                                              rdf:_7 ?manchester_syntax_instance.
      ?objectproperty_title_instance_h2                       rdf:type html:H2;
                                                              rdf:_1 ?objectproperty_dfn_instance.
      ?objectproperty_dfn_instance                            rdf:type html:Dfn;
                                                              rdf:_1 ?objectproperty_title_text_instance.
      ?objectproperty_title_text_instance                     rdf:type html:TextElement;
                                                              html:fragment ?cleanedManchesterLabel.
      ?objectproperty_IRI_p                                   rdf:type html:P;
                                                              rdf:_1 ?objectproperty_IRI_strong;
                                                              rdf:_2 ?objectproperty_IRI_a.
      ?objectproperty_IRI_strong                              rdf:type html:Strong;
                                                              rdf:_1 ?objectproperty_IRI_text.
      ?objectproperty_IRI_text                                rdf:type html:TextElement;
                                                              html:fragment 'IRI: '.
      ?objectproperty_IRI_a                                   rdf:type html:A;
                                                              html:href ?IRI_value_text;
                                                              rdf:_1 ?IRI_value.
      ?IRI_value                                              rdf:type html:TextElement;
                                                              html:fragment ?IRI_value_text.
      ?objectproperty_definition_instance                     rdf:type html:TextElement;
                                                              html:fragment ?objectPropertyDefinition_text.
      ?manchester_syntax_instance                             rdf:type html:Aside;
                                                              html:objectproperty "note" ;
                                                              html:title "Manchester Syntax (Extended)";
                                                              rdf:_1 ?manchester_syntax_code_instance.
      ?manchester_syntax_code_instance                        rdf:type html:Code;
                                                              rdf:_1 ?manchester_table_instance.
      ?manchester_table_instance                              rdf:type html:Table;
                                                              rdf:_1 ?manchester_table_body_instance_objectproperty.
      ?manchester_table_body_instance_objectproperty          rdf:type html:TableBody;
                                                              rdf:_1 ?manchester_definition_tr_objectproperty;
                                                              rdf:_2 ?manchester_definition_tr_objectproperty_empty_row;
                                                              rdf:_3 ?manchester_domain_tr_objectproperty;
                                                              rdf:_4 ?manchester_range_tr_objectproperty;
                                                              rdf:_5 ?manchester_subproperty_tr_objectproperty.
      ?manchester_definition_tr_objectproperty                rdf:type html:Row;
                                                              rdf:_1 ?manchester_definition_objectproperty_type_td;
                                                              rdf:_2 ?manchester_definition_objectproperty_value_td.
      ?manchester_definition_objectproperty_type_td           rdf:type html:DataCell;
                                                              rdf:_1 ?manchester_definition_objectproperty_type_text. 
      ?manchester_definition_objectproperty_type_text         rdf:type html:TextElement;
                                                              html:fragment 'ObjectProperty:'.
      ?manchester_definition_objectproperty_value_td          rdf:type html:DataCell;
                                                              rdf:_1 ?manchester_definition_objectproperty_value_text.
      ?manchester_definition_objectproperty_value_text        rdf:type html:TextElement;
                                                              html:fragment ?objectPropertyManchesterLabel.

      ?manchester_definition_tr_objectproperty_empty_row      rdf:type html:Row;
                                                              rdf:_1 ?manchester_definition_objectproperty_empty_td1;
                                                              rdf:_2 ?manchester_definition_objectproperty_empty_td2.
      ?manchester_definition_objectproperty_empty_td1         rdf:type html:DataCell.
      ?manchester_definition_objectproperty_empty_td2         rdf:type html:DataCell.

      ?manchester_domain_tr_objectproperty                    rdf:type html:Row;
                                                              rdf:_1 ?manchester_domain_tr_objectproperty_type_td;
                                                              rdf:_2 ?manchester_domain_tr_objectproperty_value_td.
      ?manchester_domain_tr_objectproperty_type_td            rdf:type html:DataCell;
                                                              rdf:_1 ?manchester_domain_tr_objectproperty_type_text. 
      ?manchester_domain_tr_objectproperty_type_text          rdf:type html:TextElement;
                                                              html:fragment 'Domain:'.
      ?manchester_domain_tr_objectproperty_value_td           rdf:type html:DataCell;
                                                              rdf:_1 ?manchester_domain_tr_objectproperty_value_text.
      ?manchester_domain_tr_objectproperty_value_text         rdf:type html:TextElement;
                                                              html:fragment ?objectPropertyManchesterDomain.

      ?manchester_range_tr_objectproperty                    rdf:type html:Row;
                                                             rdf:_1 ?manchester_range_tr_objectproperty_type_td;
                                                             rdf:_2 ?manchester_range_tr_objectproperty_value_td.
      ?manchester_range_tr_objectproperty_type_td            rdf:type html:DataCell;
                                                             rdf:_1 ?manchester_range_tr_objectproperty_type_text. 
      ?manchester_range_tr_objectproperty_type_text          rdf:type html:TextElement;
                                                             html:fragment 'Range:'.
      ?manchester_range_tr_objectproperty_value_td           rdf:type html:DataCell;
                                                             rdf:_1 ?manchester_range_tr_objectproperty_value_text.
      ?manchester_range_tr_objectproperty_value_text         rdf:type html:TextElement;
                                                             html:fragment ?objectPropertyManchesterRange.

      ?manchester_subproperty_tr_objectproperty              rdf:type html:Row;
                                                             rdf:_1 ?manchester_subproperty_tr_objectproperty_type_td;
                                                             rdf:_2 ?manchester_subproperty_tr_objectproperty_value_td.
      ?manchester_subproperty_tr_objectproperty_type_td      rdf:type html:DataCell;
                                                             rdf:_1 ?manchester_subproperty_tr_objectproperty_type_text. 
      ?manchester_subproperty_tr_objectproperty_type_text    rdf:type html:TextElement;
                                                             html:fragment 'Subproperty:'.
      ?manchester_subproperty_tr_objectproperty_value_td     rdf:type html:DataCell;
                                                             rdf:_1 ?manchester_subproperty_tr_objectproperty_value_text.
      ?manchester_subproperty_tr_objectproperty_value_text   rdf:type html:TextElement;
                                                             html:fragment ?objectPropertyManchesterSubPropertyOf.

      ?objectproperty_linebreak_instance1                          rdf:type html:Br.
      ?objectproperty_linebreak_instance2                          rdf:type html:Br.
      ?objectproperty_linebreak_instance3                          rdf:type html:Br.
      ?objectproperty_linebreak_instance5                          rdf:type html:Br.
      ?objectproperty_linebreak_instance6                          rdf:type html:Br.
}
where  {

  # Get the template

  {?template rdf:type respec:ObjectProperty.}

  # Get the objectproperty from the ontology, the label and description, and the sequence order in which the objectproperty appears amidst other objectpropertyes alphanumerically.
  {SELECT ?objectProperty ?objectPropertyManchesterLabel_original ?objectPropertyManchesterLabel ?objectPropertyManchesterDomain ?objectPropertyManchesterRange ?objectPropertyManchesterSubPropertyOf ?objectPropertyDefinition_text (COUNT(?prevObjectProperty) + 1 AS ?member)
WHERE {
  ?objectProperty a owl:ObjectProperty .
  ?objectProperty manchester:label ?objectPropertyManchesterLabel_original .
  ?objectProperty rdfs:isDefinedBy ?ontology.
  $this dct:subject ?ontology;
        respec:documentLanguage ?language.

  OPTIONAL{
  ?objectProperty skos:definition ?objectPropertyDefinition_original.
  FILTER (LANG(?objectPropertyDefinition_original) = ?language)
  } 
  OPTIONAL{
  ?objectProperty manchester:domain ?objectPropertyManchesterDomain.}
  OPTIONAL{
  ?objectProperty manchester:range ?objectPropertyManchesterRange.}
  OPTIONAL{
  ?objectProperty manchester:subPropertyOf ?objectPropertyManchesterSubPropertyOf.}
  
  BIND(CONCAT("ObjectProperty: ",function:escapeHTML(?objectPropertyManchesterLabel_original)) as ?objectPropertyManchesterLabel)
  BIND(IF(BOUND(?objectPropertyDefinition_original), function:escapeHTML(?objectPropertyDefinition_original), "No definition provided by this ontology.") as ?objectPropertyDefinition_text)
   
  OPTIONAL {
    ?prevObjectProperty a owl:ObjectProperty .
    ?prevObjectProperty manchester:label ?prevLabel .
    FILTER(?prevLabel < ?objectPropertyManchesterLabel_original)
  }
}
  GROUP BY ?objectPropertyManchesterLabel_original ?objectPropertyManchesterLabel ?objectProperty ?objectPropertyManchesterDomain ?objectPropertyManchesterRange ?objectPropertyManchesterSubPropertyOf ?objectPropertyDefinition_text 
  ORDER BY ?objectPropertyManchesterLabel_original
}

  BIND(IRI(CONCAT(str(rdf:),"_", str(?member))) as ?rdf_member)  
  BIND(COALESCE(?objectPropertyManchesterLabel_original, "Unknown class label") as ?objectPropertyLabel_text)
  BIND(IF(!BOUND(?objectProperty), "This ontology does not define any object properties.", ?unboundDummy) as ?absenceOfObjectPropertyDefinitions)

  # Establishing the full IRI of the object property.
  
  BIND(STR(?objectProperty) as ?fullIRI)

  # Establishing the IRI of the objectproperty

  BIND(STR(?objectProperty) as ?IRI_value_text)
  
  # Create identifiers - generic
  
  bind(IRI(CONCAT(STR(?template),'-instance')) as ?divDefinitionObjectProperty1Instance)
  bind(IRI(CONCAT(STR(?divDefinitionObjectProperty1Instance), '-', str(?member),'-1')) as ?divDefinitionObjectProperty2Instance)
  bind(IRI(CONCAT(STR(?divDefinitionObjectProperty2Instance), '-1')) as ?objectproperty_title_instance_h2)
  bind(IRI(CONCAT(STR(?divDefinitionObjectProperty2Instance), '-2')) as ?objectproperty_IRI_p)
  bind(IRI(CONCAT(STR(?divDefinitionObjectProperty2Instance), '-3')) as ?objectproperty_linebreak_instance1)
  bind(IRI(CONCAT(STR(?divDefinitionObjectProperty2Instance), '-4')) as ?objectproperty_definition_instance)
  bind(IRI(CONCAT(STR(?divDefinitionObjectProperty2Instance), '-5')) as ?objectproperty_linebreak_instance2)
  bind(IRI(CONCAT(STR(?divDefinitionObjectProperty2Instance), '-6')) as ?objectproperty_linebreak_instance3)
  bind(IRI(CONCAT(STR(?divDefinitionObjectProperty2Instance), '-7')) as ?manchester_syntax_instance)
  bind(IRI(CONCAT(STR(?objectproperty_IRI_p), '-1')) as ?objectproperty_IRI_strong)
  bind(IRI(CONCAT(STR(?objectproperty_IRI_p), '-2')) as ?objectproperty_IRI_a)
  bind(IRI(CONCAT(STR(?objectproperty_IRI_strong), '-1')) as ?objectproperty_IRI_text)
  bind(IRI(CONCAT(STR(?objectproperty_IRI_a), '-1')) as ?IRI_value)
  bind(IRI(CONCAT(STR(?objectproperty_title_instance_h2), '-1')) as ?objectproperty_dfn_instance)
  bind(IRI(CONCAT(STR(?objectproperty_dfn_instance), '-1')) as ?objectproperty_title_text_instance)
    
  # Create identifiers - Manchester Syntax 

  bind(IRI(CONCAT(STR(?manchester_syntax_instance), '-1')) as ?manchester_syntax_code_instance)
  bind(IRI(CONCAT(STR(?manchester_syntax_code_instance), '-1')) as ?manchester_table_instance)
  bind(IRI(CONCAT(STR(?manchester_table_instance), '-1')) as ?manchester_table_body_instance_objectproperty)

  bind(IRI(CONCAT(STR(?manchester_table_body_instance_objectproperty), '-1')) as ?manchester_definition_tr_objectproperty)
  bind(IRI(CONCAT(STR(?manchester_table_body_instance_objectproperty), '-2')) as ?manchester_definition_tr_objectproperty_empty_row)
  bind(IF(BOUND(?objectPropertyManchesterDomain),IRI(CONCAT(STR(?manchester_table_body_instance_objectproperty), '-3')), ?unboundDummy) as ?manchester_domain_tr_objectproperty )
  bind(IF(BOUND(?objectPropertyManchesterRange),IRI(CONCAT(STR(?manchester_table_body_instance_objectproperty), '-4')), ?unboundDummy) as ?manchester_range_tr_objectproperty )
  bind(IF(BOUND(?objectPropertyManchesterSubPropertyOf),IRI(CONCAT(STR(?manchester_table_body_instance_objectproperty), '-5')),?unboundDummy) as ?manchester_subproperty_tr_objectproperty )
  
  bind(IRI(CONCAT(STR(?manchester_definition_tr_objectproperty), '-1')) as ?manchester_definition_objectproperty_type_td)
  bind(IRI(CONCAT(STR(?manchester_definition_tr_objectproperty), '-2')) as ?manchester_definition_objectproperty_value_td)
  bind(IRI(CONCAT(STR(?manchester_definition_tr_objectproperty_empty_row), '-1')) as ?manchester_definition_objectproperty_empty_td1)
  bind(IRI(CONCAT(STR(?manchester_definition_tr_objectproperty_empty_row), '-2')) as ?manchester_definition_objectproperty_empty_td2)
  bind(IRI(CONCAT(STR(?manchester_definition_objectproperty_type_td), '-1')) as ?manchester_definition_objectproperty_type_text)
  bind(IRI(CONCAT(STR(?manchester_definition_objectproperty_value_td), '-1')) as ?manchester_definition_objectproperty_value_text)
  
  bind(IRI(CONCAT(STR(?manchester_domain_tr_objectproperty), '-1')) as ?manchester_domain_tr_objectproperty_type_td)
  bind(IRI(CONCAT(STR(?manchester_domain_tr_objectproperty), '-2')) as ?manchester_domain_tr_objectproperty_value_td)
  bind(IRI(CONCAT(STR(?manchester_domain_tr_objectproperty_type_td), '-1')) as ?manchester_domain_tr_objectproperty_type_text)
  bind(IRI(CONCAT(STR(?manchester_domain_tr_objectproperty_value_td), '-1')) as ?manchester_domain_tr_objectproperty_value_text)

  bind(IRI(CONCAT(STR(?manchester_range_tr_objectproperty), '-1')) as ?manchester_range_tr_objectproperty_type_td)
  bind(IRI(CONCAT(STR(?manchester_range_tr_objectproperty), '-2')) as ?manchester_range_tr_objectproperty_value_td)
  bind(IRI(CONCAT(STR(?manchester_range_tr_objectproperty_type_td), '-1')) as ?manchester_range_tr_objectproperty_type_text)
  bind(IRI(CONCAT(STR(?manchester_range_tr_objectproperty_value_td), '-1')) as ?manchester_range_tr_objectproperty_value_text)
  
  bind(IRI(CONCAT(STR(?manchester_subproperty_tr_objectproperty), '-1')) as ?manchester_subproperty_tr_objectproperty_type_td)
  bind(IRI(CONCAT(STR(?manchester_subproperty_tr_objectproperty), '-2')) as ?manchester_subproperty_tr_objectproperty_value_td)
  bind(IRI(CONCAT(STR(?manchester_subproperty_tr_objectproperty_type_td), '-1')) as ?manchester_subproperty_tr_objectproperty_type_text)
  bind(IRI(CONCAT(STR(?manchester_subproperty_tr_objectproperty_value_td), '-1')) as ?manchester_subproperty_tr_objectproperty_value_text)

}
""".

rule:DatatypeProperties
  a sh:SPARQLRule;
  skos:prefLabel 'Datatype properties rule'@en;
  rdfs:comment 'The datatype properties rule creates a section of datatype properties for the ontology in the document.'@en ;
  sh:construct """
prefix dct: <http://purl.org/dc/terms/>
prefix dc:  <http://purl.org/dc/elements/1.1/>
prefix dom: <https://data.rijksfinancien.nl/dom/model/def/>
prefix dcm: <http://purl.org/dc/dcmitype/>
prefix function: <https://data.rijksfinancien.nl/html/model/function/>
prefix html: <https://data.rijksfinancien.nl/html/model/def/> 
prefix manchester: <https://data.rijksfinancien.nl/manchester/model/def/>
prefix owl: <http://www.w3.org/2002/07/owl#>
prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> 
prefix respec: <https://respec.org/model/def/> 
prefix schema: <http://schema.org/>
prefix skos: <http://www.w3.org/2004/02/skos/core#>
prefix vann: <http://purl.org/vocab/vann/>

construct {

      ?datatypeproperty_div                   rdf:type html:Div;
	                                          html:fragment ?absenceOfDataTypePropertyDefinitions;
                                              ?rdf_member ?datatypeproperty_section.
      ?datatypeproperty_section               rdf:type html:Section;
                                              rdf:_1 ?datatypeproperty_H2_title;
											  rdf:_2 ?datatypeproperty_IRI_p;
											  rdf:_3 ?linebreak1;
                                              rdf:_4 ?datatypeproperty_definition;
                                              rdf:_5 ?linebreak2;  
                                              rdf:_6 ?linebreak3;
                                              rdf:_7 ?manchester_syntax.
      ?datatypeproperty_H2_title              rdf:type html:H2;
                                              rdf:_1 ?datatypeproperty_dfn.
      ?datatypeproperty_dfn                   rdf:type html:Dfn;
                                              rdf:_1 ?datatypeproperty_title.
      ?datatypeproperty_title                 rdf:type html:TextElement;
                                              html:fragment ?datatypePropertyLabel_text.
      ?datatypeproperty_IRI_p                 rdf:type html:P;
                                              rdf:_1 ?datatypeproperty_IRI_strong;
											  rdf:_2 ?datatypeproperty_IRI_a.
      ?datatypeproperty_IRI_strong            rdf:type html:Strong;
                                              rdf:_1 ?datatypeproperty_IRI_text.
      ?datatypeproperty_IRI_text              rdf:type html:TextElement;
                                              html:fragment 'IRI: '.
      ?datatypeproperty_IRI_a                 rdf:type html:A;
                                              html:href ?fullIRI;
                                              rdf:_1 ?IRI_value.
      ?IRI_value                              rdf:type html:TextElement;
                                              html:fragment ?fullIRI.	  
      ?datatypeproperty_definition            rdf:type html:TextElement;
                                              html:fragment ?datatypePropertyDefinition_text.
      ?manchester_syntax                      rdf:type html:Aside;
                                              html:class "note" ;
                                              html:title "Manchester Syntax (Extended)";
                                              rdf:_1 ?manchester_code_label;
                                              rdf:_2 ?manchester_code_domain;
											  rdf:_3 ?manchester_code_range;
											  rdf:_4 ?manchester_code_subpropertyof.
      ?manchester_code_label                  rdf:type html:Code;
                                              rdf:_1 ?manchester_label.
      ?manchester_code_domain                 rdf:type html:Code;
                                              rdf:_1  ?manchester_domain_paragraph.
      ?manchester_label                       rdf:type html:TextElement;
                                              html:fragment ?datatypePropertyManchesterLabel.
      ?manchester_domain_paragraph            rdf:type html:P;
                                              rdf:_1 ?manchester_domain;
                                              rdf:_2 ?linebreak4.
      ?manchester_domain                      rdf:type html:TextElement;
                                              html:fragment ?datatypePropertyManchesterDomain.
      ?manchester_code_range                  rdf:type html:Code;
                                              rdf:_1  ?manchester_range_paragraph.
      ?manchester_range_paragraph             rdf:type html:P;
                                              rdf:_1 ?manchester_range;
                                              rdf:_2 ?linebreak5.
      ?manchester_range                       rdf:type html:TextElement;
                                              html:fragment ?datatypePropertyManchesterRange.
      ?manchester_code_subpropertyof          rdf:type html:Code;
                                              rdf:_1  ?manchester_subpropertyof_paragraph.
      ?manchester_subpropertyof_paragraph     rdf:type html:P;
                                              rdf:_1 ?manchester_subpropertyof;
                                              rdf:_2 ?linebreak6.
      ?manchester_subpropertyof               rdf:type html:TextElement;
                                              html:fragment ?datatypePropertyManchesterSubPropertyOf.
      ?linebreak1                             rdf:type html:Br.
      ?linebreak2                             rdf:type html:Br.
      ?linebreak3                             rdf:type html:Br.
      ?linebreak4                             rdf:type html:Br.
      ?linebreak5                             rdf:type html:Br.
      ?linebreak6                             rdf:type html:Br.
}
where  {
   {?datatypeproperty_Template rdf:type respec:DatatypeProperty.}
   
   {SELECT ?datatypeProperty ?datatypePropertyManchesterLabel_original ?datatypePropertyManchesterLabel ?datatypePropertyManchesterDomain ?datatypePropertyManchesterRange ?datatypePropertyManchesterSubPropertyOf ?datatypePropertyDefinition_text (COUNT(?prevDatatypeProperty) + 1 AS ?member)
WHERE {
  ?datatypeProperty a owl:DatatypeProperty .
  ?datatypeProperty manchester:label ?datatypePropertyManchesterLabel_original .
  ?datatypeProperty rdfs:isDefinedBy ?ontology.
  $this dct:subject ?ontology;
        respec:documentLanguage ?language.

  OPTIONAL{
  ?datatypeProperty skos:definition ?datatypePropertyDefinition_original.
  FILTER (LANG(?datatypePropertyDefinition_original) = ?language)
  }
  OPTIONAL{
  ?datatypeProperty manchester:domain ?datatypePropertyManchesterDomain_original.}
  OPTIONAL{
  ?datatypeProperty manchester:range ?datatypePropertyManchesterRange_original.}
  OPTIONAL{
  ?datatypeProperty manchester:subPropertyOf ?datatypePropertyManchesterSubPropertyOf_original.}
  
  BIND(CONCAT("DatatypeProperty: ",function:escapeHTML(?datatypePropertyManchesterLabel_original)) as ?datatypePropertyManchesterLabel)
  BIND(IF(BOUND(?datatypePropertyDefinition_original), COALESCE(function:escapeHTML(?datatypePropertyDefinition_original)), "No definition provided by this ontology.") as ?datatypePropertyDefinition_text)
  BIND(IF(BOUND(?datatypePropertyManchesterDomain_original), CONCAT("Domain: ",function:escapeHTML(?datatypePropertyManchesterDomain_original)), ?unboundDummy) as ?datatypePropertyManchesterDomain)
  BIND(IF(BOUND(?datatypePropertyManchesterRange_original), CONCAT("Range: ", function:escapeHTML(?datatypePropertyManchesterRange_original)), ?unboundDummy) as ?datatypePropertyManchesterRange)
  BIND(IF(BOUND(?datatypePropertyManchesterSubPropertyOf_original), CONCAT("SubPropertyOf: ",function:escapeHTML(?datatypePropertyManchesterSubPropertyOf_original)), ?unboundDummy) as ?datatypePropertyManchesterSubPropertyOf)
  
  OPTIONAL {
    ?prevDatatypeProperty a owl:DatatypeProperty .
    ?prevDatatypeProperty manchester:label ?prevLabel .
    FILTER(?prevLabel < ?datatypePropertyManchesterLabel_original)
  }
}
  GROUP BY ?datatypePropertyManchesterLabel_original ?datatypePropertyManchesterLabel ?datatypeProperty ?datatypePropertyManchesterDomain ?datatypePropertyManchesterRange ?datatypePropertyManchesterSubPropertyOf ?datatypePropertyDefinition_text 
  ORDER BY ?datatypePropertyManchesterLabel_original
}
  BIND(IRI(CONCAT(str(rdf:),"_", str(?member))) as ?rdf_member)  
  BIND(COALESCE(?datatypePropertyManchesterLabel_original, "Unknown label") as ?datatypePropertyLabel_text)
  BIND(IF(!BOUND(?datatypeProperty), "This ontology does not define any datatype properties.", ?unboundDummy) as ?absenceOfDataTypePropertyDefinitions)

  # Establishing the prefixed IRI of the datatype property.
  
  BIND(STR(?datatypeProperty) as ?fullIRI)

  # Create identifiers
  
  BIND(IRI(CONCAT(STR(?datatypeproperty_Template),'-instance'))                   as ?datatypeproperty_div)
  BIND(IRI(CONCAT(STR(?datatypeproperty_div), '-', str(?member)))                 as ?datatypeproperty_section)
  BIND(IRI(CONCAT(STR(?datatypeproperty_section), '-1'))                          as ?datatypeproperty_H2_title) 
  BIND(IRI(CONCAT(STR(?datatypeproperty_H2_title), '-1'))                         as ?datatypeproperty_dfn)
  BIND(IRI(CONCAT(STR(?datatypeproperty_dfn), '-1'))                              as ?datatypeproperty_title)
  BIND(IRI(CONCAT(STR(?datatypeproperty_section), '-2'))                          as ?datatypeproperty_IRI_p) 
  BIND(IRI(CONCAT(STR(?datatypeproperty_section), '-3'))                          as ?linebreak1)
  BIND(IRI(CONCAT(STR(?datatypeproperty_IRI_p), '-1'))                            as ?datatypeproperty_IRI_strong)
  BIND(IRI(CONCAT(STR(?datatypeproperty_IRI_p), '-2'))                            as ?datatypeproperty_IRI_a)
  BIND(IRI(CONCAT(STR(?datatypeproperty_IRI_strong), '-1'))                       as ?datatypeproperty_IRI_text)
  BIND(IRI(CONCAT(STR(?datatypeproperty_IRI_a), '-1'))                            as ?IRI_value)
  BIND(IRI(CONCAT(STR(?datatypeproperty_section), '-4'))                          as ?datatypeproperty_definition)
  BIND(IRI(CONCAT(STR(?datatypeproperty_section), '-5'))                          as ?linebreak2)
  BIND(IRI(CONCAT(STR(?datatypeproperty_section), '-6'))                          as ?linebreak3)
  BIND(IRI(CONCAT(STR(?datatypeproperty_section), '-7'))                          as ?manchester_syntax)

  # Create identifiers - Manchester Syntax 

  BIND(IRI(CONCAT(STR(?manchester_syntax), '-1'))           as ?manchester_code_label)  
  BIND(IF(BOUND(?datatypePropertyManchesterDomain),         IRI(CONCAT(STR(?manchester_syntax), '-2')), ?unboundDummy)           as ?manchester_code_domain)  
  BIND(IF(BOUND(?datatypePropertyManchesterRange),          IRI(CONCAT(STR(?manchester_syntax), '-3')), ?unboundDummy)            as ?manchester_code_range)
  BIND(IF(BOUND(?datatypePropertyManchesterSubPropertyOf),  IRI(CONCAT(STR(?manchester_syntax), '-4')), ?unboundDummy)           as ?manchester_code_subpropertyof)
  BIND(IRI(CONCAT(STR(?manchester_code_label), '-1'))       as ?manchester_label)
  BIND(IRI(CONCAT(STR(?manchester_code_domain), '-1'))      as ?manchester_domain_paragraph)
  BIND(IRI(CONCAT(STR(?manchester_domain_paragraph), '-1')) as ?manchester_domain)
  BIND(IRI(CONCAT(STR(?manchester_domain_paragraph), '-2')) as ?linebreak4)
  BIND(IRI(CONCAT(STR(?manchester_code_range), '-1'))       as ?manchester_range_paragraph)
  BIND(IRI(CONCAT(STR(?manchester_range_paragraph), '-1'))  as ?manchester_range)
  BIND(IRI(CONCAT(STR(?manchester_range_paragraph), '-2'))  as ?linebreak5)
  BIND(IRI(CONCAT(STR(?manchester_code_subpropertyof), '-1')) as ?manchester_subpropertyof_paragraph)
  BIND(IRI(CONCAT(STR(?manchester_subpropertyof_paragraph), '-1'))  as ?manchester_subpropertyof)
  BIND(IRI(CONCAT(STR(?manchester_subpropertyof_paragraph), '-2'))  as ?linebreak6)
}
""".

rule:NodeShapes
  a sh:SPARQLRule;
  skos:prefLabel 'Node shapes rule'@en;
  rdfs:comment 'The node shapes rule creates a section of node shapes for the ontology in the document.'@en ;
  sh:construct """

prefix dct: <http://purl.org/dc/terms/>
prefix dc:  <http://purl.org/dc/elements/1.1/>
prefix dom: <https://data.rijksfinancien.nl/dom/model/def/>
prefix function: <https://data.rijksfinancien.nl/html/model/function/>
prefix html: <https://data.rijksfinancien.nl/html/model/def/> 
prefix owl: <http://www.w3.org/2002/07/owl#>
prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> 
prefix respec: <https://respec.org/model/def/> 
prefix schema: <http://schema.org/>
prefix sh: <http://www.w3.org/ns/shacl#>
prefix skos: <http://www.w3.org/2004/02/skos/core#>

construct {

      ?divDefinitionNodeShape1Instance rdf:type html:Div;
	                                   html:fragment ?absenceOfNodeShapeDefinitions;
                                       ?memberNodeShapeString ?divDefinitionNodeShape2Instance.
      ?divDefinitionNodeShape2Instance rdf:type html:Section;
                                   rdf:_1 ?nodeShape_title_instance_h2;
                                   rdf:_2 ?nodeShape_definition_instance.
      ?nodeShape_title_instance_h2     rdf:type html:H2;
                                   ?memberTitle ?nodeShape_dfn_instance.
      ?nodeShape_dfn_instance          rdf:type html:Dfn;
                                   ?memberDfn ?nodeShape_title_text_instance.
      ?nodeShape_title_text_instance   rdf:type html:TextElement;
                                   html:fragment ?nodeShapeLabel2.
      ?nodeShape_definition_instance   rdf:type html:TextElement;
                                   html:fragment ?nodeShapeDefinition.
    
}
where  {
   {?sectionDefinition rdf:type html:Section;
                       ?member ?divDefinitionNodeShape1.
    ?divDefinitionNodeShape1 rdf:type respec:NodeShapeDefinitionDiv;
                       ?memberDiv ?divDefinitionNodeShape2.				   				  
    ?divDefinitionNodeShape2 rdf:type respec:NodeShapeDefinitionInstance;       
                        rdf:_1 ?H2_class_title;
                        rdf:_2 ?P_class_definition.
    ?H2_class_title a respec:NodeShape;
                        ?memberTitle ?nodeShape_dfn.
    ?nodeShape_dfn rdf:type respec:NodeShapeDfn;
                            ?memberDfn ?nodeShape_title.
    ?nodeShape_title        rdf:type respec:NodeShapeTitle.
    ?P_class_definition rdf:type respec:NodeShape;
                        ?memberText ?nodeShape_definition_text.
     ?nodeShape_definition_text a respec:NodeShapeDefinitionText.
  }
   
   {SELECT ?nodeShape ?nodeShapeLabel ?nodeShapeDefinition (COUNT(?prevNodeShape) + 1 AS ?memberNodeShape)
WHERE {
  ?nodeShape a sh:NodeShape .
  ?nodeShape skos:prefLabel ?nodeShapeLabel .
  ?nodeShape rdfs:isDefinedBy ?ontology.
  $this dct:subject ?ontology;
        respec:documentLanguage ?language.

  OPTIONAL{
  ?nodeShape skos:definition ?nodeShapeDefinition_original.
  FILTER (LANG(?nodeShapeDefinition_original) = ?language)
  }
  BIND(function:escapeHTML(COALESCE(?nodeShapeDefinition_original, "No description available")) as ?nodeShapeDefinition)
  OPTIONAL {
    ?prevNodeShape a sh:NodeShape .
    ?prevNodeShape skos:prefLabel ?prevLabel .
    FILTER(?prevLabel < ?nodeShapeLabel)
  }
}
  GROUP BY ?nodeShapeLabel ?nodeShape ?nodeShapeDefinition
  ORDER BY ?nodeShapeLabel
}
  BIND(IRI(CONCAT(str(rdf:),"_", str(?memberNodeShape))) as ?memberNodeShapeString)
  BIND(IF(!BOUND(?nodeShape), "This ontology does not define any node shapes.", ?unboundDummy) as ?absenceOfNodeShapeDefinitions)

  # Create identifiers
  bind(COALESCE(?nodeShapeLabel, "Unknown label") as ?nodeShapeLabel2)
  bind(IRI(CONCAT(STR(?sectionDefinition), '-instance')) as ?sectionDefinitionInstance)
  bind(IRI(CONCAT(STR(?divDefinitionNodeShape1),'-instance')) as ?divDefinitionNodeShape1Instance)
  bind(IRI(CONCAT(STR(?divDefinitionNodeShape2), '-', str(?memberNodeShape),'-instance')) as ?divDefinitionNodeShape2Instance)
  bind(IRI(CONCAT(STR(?nodeShape_title), '-', str(?memberNodeShape), '-instance')) as ?nodeShape_title_text_instance)
  bind(IRI(CONCAT(STR(?H2_class_title), '-', str(?memberNodeShape), '-instance')) as ?nodeShape_title_instance_h2)
  bind(IRI(CONCAT(STR(?nodeShape_definition_text), '-', str(?memberNodeShape), '-instance')) as ?nodeShape_definition_instance)
  bind(IRI(CONCAT(STR(?nodeShape_dfn), '-', str(?memberNodeShape), '-instance')) as ?nodeShape_dfn_instance)
  
}
""".

rule:NamedIndividuals
  a sh:SPARQLRule;
  skos:prefLabel 'Named individuals rule'@en;
  rdfs:comment 'The named individuals rule creates a section of named individuals for the ontology in the document.'@en ;
  sh:construct """
prefix dct: <http://purl.org/dc/terms/>
prefix dc:  <http://purl.org/dc/elements/1.1/>
prefix dom: <https://data.rijksfinancien.nl/dom/model/def/>
prefix function: <https://data.rijksfinancien.nl/html/model/function/>
prefix html: <https://data.rijksfinancien.nl/html/model/def/> 
prefix manchester: <https://data.rijksfinancien.nl/manchester/model/def/>
prefix owl: <http://www.w3.org/2002/07/owl#>
prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> 
prefix respec: <https://respec.org/model/def/> 
prefix schema: <http://schema.org/>
prefix skos: <http://www.w3.org/2004/02/skos/core#>
prefix vann: <http://purl.org/vocab/vann/>

construct {

      ?namedindividual_div                    rdf:type html:Div;
                                            html:fragment ?absenceOfNamedIndividualDefinitions;
                                              ?rdf_member ?namedindividual_section.
      ?namedindividual_section                rdf:type html:Section;
                                              rdf:_1 ?namedindividual_H2_title;
                                              rdf:_2 ?namedindividual_IRI_p;
                                              rdf:_3 ?linebreak1;
                                              rdf:_4 ?namedindividual_definition;
                                              rdf:_5 ?linebreak2;  
                                              rdf:_6 ?linebreak3;
                                              rdf:_7 ?manchester_syntax.
      ?namedindividual_H2_title               rdf:type html:H2;
                                              rdf:_1 ?namedindividual_dfn.
      ?namedindividual_dfn                    rdf:type html:Dfn;
                                              rdf:_1 ?namedindividual_title.
      ?namedindividual_title                  rdf:type html:TextElement;
                                              html:fragment ?namedIndividualLabel.
      ?namedindividual_IRI_p                  rdf:type html:P;
                                              rdf:_1 ?namedindividual_IRI_strong;
                                              rdf:_2 ?namedindividual_IRI_a.
      ?namedindividual_IRI_strong             rdf:type html:Strong;
                                              rdf:_1 ?namedindividual_IRI_text.
      ?namedindividual_IRI_text               rdf:type html:TextElement;
                                              html:fragment 'IRI: '.
      ?namedindividual_IRI_a                  rdf:type html:A;
                                              html:href ?fullIRI;
                                              rdf:_1 ?IRI_value.
      ?IRI_value                              rdf:type html:TextElement;
                                              html:fragment ?fullIRI.   
      ?namedindividual_definition             rdf:type html:TextElement;
                                              html:fragment ?cleanedDefinition.
      ?manchester_syntax                      rdf:type html:Aside;
                                              html:class "note" ;
                                              html:title "Manchester Syntax (Extended)";
                                              rdf:_1 ?manchester_code_label;
                                              rdf:_2 ?manchester_code_type;
                                              rdf:_3 ?manchester_code_fact.
      ?manchester_code_label                  rdf:type html:Code;
                                              rdf:_1 ?manchester_individual;
                                              rdf:_2 ?manchester_label.
      ?manchester_code_type                   rdf:type html:Code;
                                              rdf:_1  ?manchester_type_paragraph.
      ?manchester_individual                  rdf:type html:TextElement;
                                              html:fragment "Individual: ".
      ?manchester_label                       rdf:type html:TextElement;
                                              html:fragment ?namedIndividualLabel.
      ?manchester_type_paragraph              rdf:type html:P;
                                              rdf:_1 ?manchester_type;
                                              rdf:_2 ?linebreak4.
      ?manchester_type                        rdf:type html:TextElement;
                                              html:fragment ?cleanedClass.
      ?manchester_code_fact                   rdf:type html:Code;
                                              rdf:_1  ?manchester_fact_paragraph.
      ?manchester_fact_paragraph              rdf:type html:P;
                                              rdf:_1 ?manchester_fact;
                                              rdf:_2 ?linebreak5.
      ?manchester_fact                        rdf:type html:TextElement;
                                              html:fragment ?cleanedFact.
      ?linebreak1                             rdf:type html:Br.
      ?linebreak2                             rdf:type html:Br.
      ?linebreak3                             rdf:type html:Br.
      ?linebreak4                             rdf:type html:Br.
      ?linebreak5                             rdf:type html:Br.
}
where  {
   {?namedindividual_Template rdf:type respec:NamedIndividual.}
   
   {SELECT ?namedIndividual ?namedIndividualLabel ?cleanedDefinition ?cleanedClass ?cleanedFact (COUNT(?prevNamedIndividual) + 1 AS ?member)
WHERE {
  ?namedIndividual manchester:syntax 'INDIVIDUAL';
                   manchester:class ?class ;
                   manchester:label ?namedIndividualLabel ;
                   rdfs:isDefinedBy ?ontology.
   
   BIND(function:escapeHTML(?class) as ?cleanedClass)
   
   $this dct:subject ?ontology;
         respec:documentLanguage ?language.
   
   OPTIONAL
   {?namedIndividual skos:definition ?definitionIndividual
   FILTER(LANG(?definitionIndividual) = ?language)}

   BIND(IF(BOUND(?definitionIndividual), function:escapeHTML(?definitionIndividual), "No known definition") as ?cleanedDefinition)

   OPTIONAL
   {?namedIndividual manchester:fact ?fact.}
   BIND(IF(BOUND(?fact), function:escapeHTML(?fact), "No known facts") as ?cleanedFact)
  
   OPTIONAL 
   {?prevNamedIndividual manchester:syntax 'INDIVIDUAL';
                          manchester:label ?prevLabel.
     FILTER(?prevLabel < ?namedIndividualLabel)
   }
  }
  GROUP BY ?namedIndividualLabel ?namedIndividual ?cleanedDefinition ?cleanedClass ?cleanedFact 
  ORDER BY ?namedIndividualLabel
}
  BIND(IRI(CONCAT(str(rdf:),"_", str(?member))) as ?rdf_member)  
  BIND(IF(!BOUND(?namedIndividual), "This ontology does not define any named individuals.", ?unboundDummy) as ?absenceOfNamedIndividualDefinitions)

  # Establishing the full IRI of the named individual.
  
  BIND(STR(?namedIndividual) as ?fullIRI)  

  # Create identifiers
  
  BIND(IRI(CONCAT(STR(?namedindividual_Template),'-instance'))                   as ?namedindividual_div)
  BIND(IRI(CONCAT(STR(?namedindividual_div), '-', str(?member)))                 as ?namedindividual_section)
  BIND(IRI(CONCAT(STR(?namedindividual_section), '-1'))                          as ?namedindividual_H2_title) 
  BIND(IRI(CONCAT(STR(?namedindividual_H2_title), '-1'))                         as ?namedindividual_dfn)
  BIND(IRI(CONCAT(STR(?namedindividual_dfn), '-1'))                              as ?namedindividual_title)
  BIND(IRI(CONCAT(STR(?namedindividual_section), '-2'))                          as ?namedindividual_IRI_p) 
  BIND(IRI(CONCAT(STR(?namedindividual_section), '-3'))                          as ?linebreak1)
  BIND(IRI(CONCAT(STR(?namedindividual_IRI_p), '-1'))                            as ?namedindividual_IRI_strong)
  BIND(IRI(CONCAT(STR(?namedindividual_IRI_p), '-2'))                            as ?namedindividual_IRI_a)
  BIND(IRI(CONCAT(STR(?namedindividual_IRI_strong), '-1'))                       as ?namedindividual_IRI_text)
  BIND(IRI(CONCAT(STR(?namedindividual_IRI_a), '-1'))                            as ?IRI_value)
  BIND(IRI(CONCAT(STR(?namedindividual_section), '-4'))                          as ?namedindividual_definition)
  BIND(IRI(CONCAT(STR(?namedindividual_section), '-5'))                          as ?linebreak2)
  BIND(IRI(CONCAT(STR(?namedindividual_section), '-6'))                          as ?linebreak3)
  BIND(IRI(CONCAT(STR(?namedindividual_section), '-7'))                          as ?manchester_syntax)

  # Create identifiers - Manchester Syntax 

  BIND(IRI(CONCAT(STR(?manchester_syntax), '-1'))                                           as ?manchester_code_label)  
  BIND(IRI(CONCAT(STR(?manchester_syntax), '-2'))                                           as ?manchester_code_type)  
  BIND(IF(BOUND(?fact),IRI(CONCAT(STR(?manchester_syntax), '-3')), ?unboundDummy)           as ?manchester_code_fact)
  BIND(IRI(CONCAT(STR(?manchester_code_label), '-1'))                                       as ?manchester_individual)
  BIND(IRI(CONCAT(STR(?manchester_code_label), '-2'))                                       as ?manchester_label)
  BIND(IRI(CONCAT(STR(?manchester_code_type), '-1'))                                        as ?manchester_type_paragraph)
  BIND(IRI(CONCAT(STR(?manchester_type_paragraph), '-1'))                                   as ?manchester_type)
  BIND(IRI(CONCAT(STR(?manchester_type_paragraph), '-2'))                                   as ?linebreak4)
  BIND(IRI(CONCAT(STR(?manchester_code_fact), '-1'))                                        as ?manchester_fact_paragraph)
  BIND(IRI(CONCAT(STR(?manchester_fact_paragraph), '-1'))                                   as ?manchester_fact)
  BIND(IRI(CONCAT(STR(?manchester_fact_paragraph), '-2'))                                   as ?linebreak5)
}
""".

rule:Concepts
  a sh:SPARQLRule;
  skos:prefLabel 'Concept rule'@en;
  rdfs:comment 'The concept rule creates a document section for concept schemes and their concepts as defined in the ontology.'@en ;
  sh:construct """
prefix dct: <http://purl.org/dc/terms/>
prefix dc:  <http://purl.org/dc/elements/1.1/>
prefix dom: <https://data.rijksfinancien.nl/dom/model/def/>
prefix function: <https://data.rijksfinancien.nl/html/model/function/>
prefix html: <https://data.rijksfinancien.nl/html/model/def/>
prefix manchester: <https://data.rijksfinancien.nl/manchester/model/def/>
prefix owl: <http://www.w3.org/2002/07/owl#>
prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>
prefix respec: <https://respec.org/model/def/>
prefix schema: <http://schema.org/>
prefix skos: <http://www.w3.org/2004/02/skos/core#>
prefix vann: <http://purl.org/vocab/vann/>

construct {
      ?concept_chapter                rdf:type html:Div;
                                               html:fragment ?absenceOfConceptSchemeDefinitions;
                                               ?rdf_memberScheme ?conceptScheme_div.
      ?conceptScheme_div             rdf:type html:Div;
                                              rdf:_1 ?conceptScheme_section;
                                              rdf:_2 ?concept_div.
      ?conceptScheme_section         rdf:type html:Section;
                                              rdf:_1 ?conceptScheme_H2_title;
                                              rdf:_2 ?conceptScheme_IRI_p;
                                              rdf:_3 ?linebreak1;
                                              rdf:_4 ?conceptScheme_definition;
                                              rdf:_5 ?linebreak2;  
                                              rdf:_6 ?linebreak3;
                                              rdf:_7 ?manchester_syntax_scheme.
      ?conceptScheme_H2_title       rdf:type html:H2;
                                              rdf:_1 ?conceptScheme_dfn.
      ?conceptScheme_dfn            rdf:type html:Dfn;
                                              rdf:_1 ?conceptScheme_title.
      ?conceptScheme_title          rdf:type html:TextElement;
                                              html:fragment ?conceptSchemeLabel_text.
      ?conceptScheme_IRI_p          rdf:type html:P;
                                              rdf:_1 ?conceptScheme_IRI_strong;
                                              rdf:_2 ?conceptScheme_IRI_a.
      ?conceptScheme_IRI_strong     rdf:type html:Strong;
                                              rdf:_1 ?conceptScheme_IRI_text.
      ?conceptScheme_IRI_text       rdf:type html:TextElement;
                                              html:fragment 'IRI: '.
      ?conceptScheme_IRI_a          rdf:type html:A;
                                              html:href ?conceptScheme_IRI;
                                              rdf:_1 ?IRIScheme_value.
      ?IRIScheme_value              rdf:type html:TextElement;
                                              html:fragment ?concept_IRI.
      ?conceptScheme_definition     rdf:type html:TextElement;
                                              html:fragment ?cleanedSchemeDefinition.
      ?manchester_syntax_scheme     rdf:type html:Aside;
                                              html:class "note" ;
                                              html:title "Manchester Syntax (Extended)";
                                              rdf:_1 ?manchester_code_Schemelabel;
                                              rdf:_2 ?manchester_code_Schemetype.
      ?manchester_code_Schemelabel            rdf:type html:Code;
                                              rdf:_1 ?manchester_conceptScheme;
                                              rdf:_2 ?manchester_labelScheme.
      ?manchester_code_Schemetype             rdf:type html:Code;
                                              rdf:_1  ?manchester_type_paragraph_scheme.
      ?manchester_conceptScheme               rdf:type html:TextElement;
                                              html:fragment "ConceptScheme: ".
      ?manchester_labelScheme                 rdf:type html:TextElement;
                                              html:fragment ?conceptSchemeLabel.
      ?manchester_type_paragraph_scheme       rdf:type html:P;
                                              rdf:_1 ?manchester_type_scheme;
                                              rdf:_2 ?linebreak4.
      ?manchester_type_scheme                 rdf:type html:TextElement;
                                              html:fragment ?conceptSchemeManchesterType.
      ?concept_div                   rdf:type html:Div;
                                              html:fragment ?absenceOfConceptDefinitions;
                                              ?rdf_member ?concept_section.
      ?concept_section               rdf:type html:Section;
                                              rdf:_1 ?concept_H2_title;
                                              rdf:_2 ?concept_IRI_p;
                                              rdf:_3 ?linebreak4;
                                              rdf:_4 ?concept_definition;
                                              rdf:_5 ?linebreak5;  
                                              rdf:_6 ?linebreak6;
                                              rdf:_7 ?manchester_syntax.
      ?concept_H2_title              rdf:type html:H2;
                                              rdf:_1 ?concept_dfn.
      ?concept_dfn                   rdf:type html:Dfn;
                                              rdf:_1 ?concept_title.
      ?concept_title                 rdf:type html:TextElement;
                                              html:fragment ?conceptLabel_text.
      ?concept_IRI_p                 rdf:type html:P;
                                              rdf:_1 ?concept_IRI_strong;
                                              rdf:_2 ?concept_IRI_a.
      ?concept_IRI_strong            rdf:type html:Strong;
                                              rdf:_1 ?concept_IRI_text.
      ?concept_IRI_text              rdf:type html:TextElement;
                                              html:fragment 'IRI: '.
      ?concept_IRI_a                 rdf:type html:A;
                                              html:href ?concept_IRI;
                                              rdf:_1 ?IRI_value.
      ?IRI_value                              rdf:type html:TextElement;
                                              html:fragment ?concept_IRI.
      ?concept_definition                     rdf:type html:TextElement;
                                              html:fragment ?cleanedDefinition.
      ?manchester_syntax                      rdf:type html:Aside;
                                              html:class "note" ;
                                              html:title "Manchester Syntax (Extended)";
                                              rdf:_1 ?manchester_code_label.
      ?manchester_code_label                  rdf:type html:Code;
                                              rdf:_1 ?manchester_concept;
                                              rdf:_2 ?manchester_label;
                                              rdf:_3 ?linebreak7;
                                              rdf:_4 ?manchester_inScheme.
      ?manchester_concept                     rdf:type html:TextElement;
                                              html:fragment "Concept: ".
      ?manchester_label                       rdf:type html:TextElement;
                                              html:fragment ?conceptLabel.
      ?manchester_inScheme                    rdf:type html:TextElement;
                                              html:fragment ?inSchemeLabel.
      ?linebreak1                             rdf:type html:Br.
      ?linebreak2                             rdf:type html:Br.
      ?linebreak3                             rdf:type html:Br.
      ?linebreak4                             rdf:type html:Br.
      ?linebreak5                             rdf:type html:Br.
      ?linebreak6                             rdf:type html:Br.
      ?linebreak7                             rdf:type html:Br.

}
WHERE  {
  {
    ?concept_template rdf:type respec:Concept.
  }
  ### Get the concepts per concept scheme as defined in the ontology and sort them alphabetically
  {
    SELECT ?conceptScheme ?concept ?conceptLabel ?inScheme ?cleanedDefinition (COUNT(?prevConcept) + 1 AS ?member)
    WHERE {

      ?concept manchester:syntax 'CONCEPT';
               manchester:label ?conceptLabel ;
               rdfs:isDefinedBy $this.
      $this dct:subject ?ontology;
            respec:documentLanguage ?language.
      ?concept skos:inScheme ?conceptScheme.
      ?conceptScheme manchester:label ?inScheme.

      OPTIONAL
      {
        ?concept skos:definition ?definition.
        FILTER (LANG(?definition) = ?language)
      }

      BIND(IF(BOUND(?definition), COALESCE(Str(?definition)), "No definition provided by this ontology.") as ?cleanedDefinition)

      OPTIONAL
      {
        ?prevConcept manchester:syntax 'CONCEPT';
                     manchester:label ?prevLabel.
        ?prevConcept skos:inScheme ?conceptScheme
        FILTER(?prevLabel < ?conceptLabel)
      }
    }
    GROUP BY ?conceptScheme ?conceptLabel ?inScheme ?concept ?cleanedDefinition
    ORDER BY  ?conceptLabel
  }
  ### Get the concept schemes as defined in the ontology and sort them alphabetically
  {
    SELECT ?conceptScheme ?conceptSchemeLabel ?cleanedSchemeDefinition (COUNT(?prevConceptScheme) + 1 AS ?memberScheme)
    WHERE {
      ?conceptScheme manchester:syntax 'CONCEPTSCHEME';
                     manchester:label ?conceptSchemeLabel;
                     rdfs:isDefinedBy $this.
      $this dct:subject ?ontology;
            respec:documentLanguage ?language.

      OPTIONAL
      {
        ?conceptScheme skos:definition ?schemeDefinition.
        FILTER (LANG(?schemeDefinition) = ?language)
      }
      
      BIND(IF(BOUND(?schemeDefinition), COALESCE(function:escapeHTML(?schemeDefinition)), "No definition provided by this ontology.") as ?cleanedSchemeDefinition)
      
      OPTIONAL
      {
        ?prevConceptScheme manchester:syntax 'CONCEPTSCHEME';
                           manchester:label ?prevSchemeLabel.
        FILTER(?prevSchemeLabel < ?conceptSchemeLabel)
      }
    }
    GROUP BY ?conceptSchemeLabel ?conceptScheme ?cleanedSchemeDefinition
    ORDER BY ?conceptSchemeLabel
  }
  UNION
  # Add also concepts that are not within a skos:Scheme
  {
    SELECT ?concept ?conceptLabel ?cleanedDefinition (COUNT(?prevConcept) + 1 AS ?member)
    WHERE {
      ?concept manchester:syntax 'CONCEPT';
               manchester:label ?conceptLabel;
               rdfs:isDefinedBy $this.
     
      $this dct:subject ?ontology;
            respec:documentLanguage ?language.
      FILTER NOT EXISTS
      {?concept skos:inScheme ?conceptScheme.}
      
      OPTIONAL
      {
        ?concept skos:definition ?definition.
        FILTER (LANG(?definition) = ?language)
      }
      
      BIND(IF(BOUND(?definition), COALESCE(function:escapeHTML(?definition)), "No definition provided by this ontology.") as ?cleanedDefinition)
      
      OPTIONAL
      {
        ?prevConcept manchester:syntax 'CONCEPT';
                     manchester:label ?prevLabel.
        FILTER(?prevLabel < ?conceptLabel)
      }
    }
    GROUP BY ?conceptLabel ?concept ?cleanedDefinition
    ORDER BY ?conceptLabel
  }
  BIND(IRI(CONCAT(str(rdf:),"_", str(?memberScheme))) as ?rdf_memberScheme)  
  BIND(IRI(CONCAT(str(rdf:),"_", str(?member))) as ?rdf_member)  
  BIND(COALESCE(?conceptSchemeLabel, "Unknown label") as ?conceptSchemeLabel_text)
  BIND(COALESCE(?conceptLabel, "Unknown label") as ?conceptLabel_text)
  BIND(COALESCE(concat("In scheme: ",?inScheme), "in scheme: Unknown scheme") as ?inSchemeLabel)
  BIND(IF(!BOUND(?concept), "This ontology does not define any concepts.", ?unboundDummy) as ?absenceOfConceptDefinitions)
  BIND(IF(!BOUND(?conceptScheme), "This ontology does not define any concept scheme.", ?unboundDummy) as ?absenceOfConceptSchemeDefinitions)
  # Establishing the full IRI of the concept.
  BIND(STR(?concept) as ?concept_IRI)
  BIND(STR(?conceptScheme) as ?conceptScheme_IRI)
  
  # Create identifiers - ConceptScheme
  
  BIND(IRI(CONCAT(STR(?concept_template),'-instance'))                   as ?concept_chapter)
  BIND(IRI(CONCAT(STR(?concept_chapter),'-', str(?memberScheme)))        as ?conceptScheme_div)
  BIND(IRI(CONCAT(STR(?conceptScheme_div), '-1'))                        as ?conceptScheme_section)
  BIND(IRI(CONCAT(STR(?conceptScheme_div), '-2'))                        as ?concept_div)
  BIND(IRI(CONCAT(STR(?conceptScheme_section), '-1'))                    as ?conceptScheme_H2_title)
  BIND(IRI(CONCAT(STR(?conceptScheme_H2_title), '-1'))                   as ?conceptScheme_dfn)
  BIND(IRI(CONCAT(STR(?conceptScheme_dfn), '-1'))                        as ?conceptScheme_title)
  BIND(IRI(CONCAT(STR(?conceptScheme_section), '-2'))                    as ?conceptScheme_IRI_p)
  BIND(IRI(CONCAT(STR(?conceptScheme_section), '-3'))                    as ?linebreak1)
  BIND(IRI(CONCAT(STR(?conceptScheme_IRI_p), '-1'))                      as ?conceptScheme_IRI_strong)
  BIND(IRI(CONCAT(STR(?conceptScheme_IRI_p), '-2'))                      as ?conceptScheme_IRI_a)
  BIND(IRI(CONCAT(STR(?conceptScheme_IRI_strong), '-1'))                 as ?conceptScheme_IRI_text)
  BIND(IRI(CONCAT(STR(?conceptScheme_IRI_a), '-1'))                      as ?IRIScheme_value)
  BIND(IRI(CONCAT(STR(?conceptScheme_section), '-4'))                    as ?conceptScheme_definition)
  BIND(IRI(CONCAT(STR(?conceptScheme_section), '-5'))                    as ?linebreak2)
  BIND(IRI(CONCAT(STR(?conceptScheme_section), '-6'))                    as ?linebreak3)
  BIND(IRI(CONCAT(STR(?conceptScheme_section), '-7'))                    as ?manchester_syntax_scheme)
  
  # Create identifiers - Concept
  
  BIND(IRI(CONCAT(STR(?concept_div), '-', str(?member)))                 as ?concept_section)
  BIND(IRI(CONCAT(STR(?concept_section), '-1'))                          as ?concept_H2_title)
  BIND(IRI(CONCAT(STR(?concept_H2_title), '-1'))                         as ?concept_dfn)
  BIND(IRI(CONCAT(STR(?concept_dfn), '-1'))                              as ?concept_title)
  BIND(IRI(CONCAT(STR(?concept_section), '-2'))                          as ?concept_IRI_p)
  BIND(IRI(CONCAT(STR(?concept_section), '-3'))                          as ?linebreak4)
  BIND(IRI(CONCAT(STR(?concept_IRI_p), '-1'))                            as ?concept_IRI_strong)
  BIND(IRI(CONCAT(STR(?concept_IRI_p), '-2'))                            as ?concept_IRI_a)
  BIND(IRI(CONCAT(STR(?concept_IRI_strong), '-1'))                       as ?concept_IRI_text)
  BIND(IRI(CONCAT(STR(?concept_IRI_a), '-1'))                            as ?IRI_value)
  BIND(IRI(CONCAT(STR(?concept_section), '-4'))                          as ?concept_definition)
  BIND(IRI(CONCAT(STR(?concept_section), '-5'))                          as ?linebreak5)
  BIND(IRI(CONCAT(STR(?concept_section), '-6'))                          as ?linebreak6)
  BIND(IRI(CONCAT(STR(?concept_section), '-7'))                          as ?manchester_syntax)
  
  # Create identifiers - Manchester Syntax - ConceptScheme
  BIND(IRI(CONCAT(STR(?manchester_syntax_scheme), '-1'))                 as ?manchester_code_schemelabel)  
  BIND(IRI(CONCAT(STR(?manchester_code_schemelabel), '-1'))              as ?manchester_conceptscheme)
  BIND(IRI(CONCAT(STR(?manchester_code_schemelabel), '-2'))              as ?manchester_labelscheme)
  
  # Create identifiers - Manchester Syntax - Concept
  BIND(IRI(CONCAT(STR(?manchester_syntax), '-1'))                        as ?manchester_code_label)  
  BIND(IRI(CONCAT(STR(?manchester_code_label), '-1'))                    as ?manchester_concept)
  BIND(IRI(CONCAT(STR(?manchester_code_label), '-2'))                    as ?manchester_label)
  BIND(IRI(CONCAT(STR(?manchester_code_label), '-3'))                    as ?linebreak7)
  BIND(IRI(CONCAT(STR(?manchester_code_label), '-4'))                    as ?manchester_inScheme)
}
""".

function:escapeHTML
    a sh:SPARQLFunction ;
    rdfs:comment "Escapes HTML characters in the input string." ;
    sh:parameter [
        sh:path function:input ;
        sh:datatype xsd:string ;
        sh:description "The input string to escape HTML characters from." ;
    ] ;
    sh:returnType xsd:string ;
    sh:select """
       SELECT ?result WHERE {
       BIND(replace(
                    replace(
                        replace(
                            replace(
                                replace(
                                    $input,
                                    '&', '&amp;', 'g'),
                                '<', '&lt;', 'g'),
                            '>', '&gt;', 'g'),
                        '\"', '&quot;', 'g'),
                    "\'", '&apos;', 'g')
                AS ?result).
        }
        """ .

function:getPrefixedIRI
    a sh:SPARQLFunction ;
    rdfs:comment "Gets prefixed IRI from full IRI." ;
    skos:example '''Assume an ontology with namespace "http://example.org/", prefix "ex" and a class "Person" as defined by this ontology. The function call will result in "ex:Person" for the IRI http://example.org/Person''';
    sh:parameter [
        sh:path function:IRI ;
        sh:datatype xsd:anyURI ;
        sh:description "The full IRI of a RDF resource as defined in an ontology." ;
    ] ;
    sh:returnType xsd:string ;
    sh:select """

PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX sh: <http://www.w3.org/ns/shacl#>
PREFIX vann: <http://purl.org/vocab/vann/>


SELECT ?result WHERE {

  # Get the namespace declarations for the ontology
  {
    ?ontology sh:declare ?prefixDeclaration.
    ?prefixDeclaration sh:namespace ?namespace; # e.g. "http://example.org/"
                       sh:prefix ?prefix.       # e.g. "ex"
  }
  UNION 
  # Get the namespace declaration for the ontology itself
  {
    ?ontology vann:preferredNamespaceUri ?namespace;  # e.g. "http://example.org/"
              vann:preferredNamespacePrefix ?prefix.  # e.g. "ex"
  }
  
  # Establish the full IRI of the resource, e.g. ex:Person would lead to http://example.org/Person.
  BIND(STR($IRI) as ?fullIRI)
  
  # Select one of the namespaces that match with the namespace of the resource
  FILTER(STRSTARTS(?fullIRI, STR(?namespace))) # e.g. "http://example.org/"
  
  # Establish the local name
  BIND(STRAFTER(?fullIRI, STR(?namespace)) as ?localName) # e.g. "Person"
  
  # Establish the prefixed IRI if possible
  BIND(CONCAT(STR(?prefix),":",?localName) as ?prefixedIRI)
  
  # Establish the prefixed IRI or return the full IRI as a string
  BIND(COALESCE(?prefixedIRI, ?fullIRI) as ?result) # e.g. "ex:Person" when succesful or "http://example.org/Person" when prefix/namespace is unknown.
}
  """ .